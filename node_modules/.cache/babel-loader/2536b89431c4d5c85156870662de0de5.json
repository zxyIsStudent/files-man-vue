{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport { getCurrentInstance, computed, watch } from 'vue';\nconst CHECKED_CHANGE_EVENT = \"checked-change\";\nconst useCheckProps = {\n  data: {\n    type: Array,\n\n    default() {\n      return [];\n    }\n\n  },\n  optionRender: Function,\n  placeholder: String,\n  title: String,\n  filterable: Boolean,\n  format: Object,\n  filterMethod: Function,\n  defaultChecked: Array,\n  props: Object\n};\n\nconst useCheck = (props, panelState) => {\n  const {\n    emit\n  } = getCurrentInstance();\n  const labelProp = computed(() => props.props.label || \"label\");\n  const keyProp = computed(() => props.props.key || \"key\");\n  const disabledProp = computed(() => props.props.disabled || \"disabled\");\n  const filteredData = computed(() => {\n    return props.data.filter(item => {\n      if (typeof props.filterMethod === \"function\") {\n        return props.filterMethod(panelState.query, item);\n      } else {\n        const label = item[labelProp.value] || item[keyProp.value].toString();\n        return label.toLowerCase().includes(panelState.query.toLowerCase());\n      }\n    });\n  });\n  const checkableData = computed(() => {\n    return filteredData.value.filter(item => !item[disabledProp.value]);\n  });\n  const checkedSummary = computed(() => {\n    const checkedLength = panelState.checked.length;\n    const dataLength = props.data.length;\n    const {\n      noChecked,\n      hasChecked\n    } = props.format;\n\n    if (noChecked && hasChecked) {\n      return checkedLength > 0 ? hasChecked.replace(/\\${checked}/g, checkedLength.toString()).replace(/\\${total}/g, dataLength.toString()) : noChecked.replace(/\\${total}/g, dataLength.toString());\n    } else {\n      return `${checkedLength}/${dataLength}`;\n    }\n  });\n  const isIndeterminate = computed(() => {\n    const checkedLength = panelState.checked.length;\n    return checkedLength > 0 && checkedLength < checkableData.value.length;\n  });\n\n  const updateAllChecked = () => {\n    const checkableDataKeys = checkableData.value.map(item => item[keyProp.value]);\n    panelState.allChecked = checkableDataKeys.length > 0 && checkableDataKeys.every(item => panelState.checked.includes(item));\n  };\n\n  const handleAllCheckedChange = value => {\n    panelState.checked = value ? checkableData.value.map(item => item[keyProp.value]) : [];\n  };\n\n  watch(() => panelState.checked, (val, oldVal) => {\n    updateAllChecked();\n\n    if (panelState.checkChangeByUser) {\n      const movedKeys = val.concat(oldVal).filter(v => !val.includes(v) || !oldVal.includes(v));\n      emit(CHECKED_CHANGE_EVENT, val, movedKeys);\n    } else {\n      emit(CHECKED_CHANGE_EVENT, val);\n      panelState.checkChangeByUser = true;\n    }\n  });\n  watch(checkableData, () => {\n    updateAllChecked();\n  });\n  watch(() => props.data, () => {\n    const checked = [];\n    const filteredDataKeys = filteredData.value.map(item => item[keyProp.value]);\n    panelState.checked.forEach(item => {\n      if (filteredDataKeys.includes(item)) {\n        checked.push(item);\n      }\n    });\n    panelState.checkChangeByUser = false;\n    panelState.checked = checked;\n  });\n  watch(() => props.defaultChecked, (val, oldVal) => {\n    if (oldVal && val.length === oldVal.length && val.every(item => oldVal.includes(item))) return;\n    const checked = [];\n    const checkableDataKeys = checkableData.value.map(item => item[keyProp.value]);\n    val.forEach(item => {\n      if (checkableDataKeys.includes(item)) {\n        checked.push(item);\n      }\n    });\n    panelState.checkChangeByUser = false;\n    panelState.checked = checked;\n  }, {\n    immediate: true\n  });\n  return {\n    labelProp,\n    keyProp,\n    disabledProp,\n    filteredData,\n    checkableData,\n    checkedSummary,\n    isIndeterminate,\n    updateAllChecked,\n    handleAllCheckedChange\n  };\n};\n\nexport { CHECKED_CHANGE_EVENT, useCheck, useCheckProps };","map":{"version":3,"mappings":";;AACY,MAACA,oBAAoB,GAAG,gBAAxB;AACA,MAACC,aAAa,GAAG;EAC3BC,IAAI,EAAE;IACJC,IAAI,EAAEC,KADF;;IAEJC,OAAO,GAAG;MACR,OAAO,EAAP;IACD;;EAJG,CADqB;EAO3BC,YAAY,EAAEC,QAPa;EAQ3BC,WAAW,EAAEC,MARc;EAS3BC,KAAK,EAAED,MAToB;EAU3BE,UAAU,EAAEC,OAVe;EAW3BC,MAAM,EAAEC,MAXmB;EAY3BC,YAAY,EAAER,QAZa;EAa3BS,cAAc,EAAEZ,KAbW;EAc3Ba,KAAK,EAAEH;AAdoB,CAAjB;;AAgBA,MAACI,QAAQ,GAAG,CAACD,KAAD,EAAQE,UAAR,KAAuB;EAC7C,MAAM;IAAEC;EAAF,IAAWC,kBAAkB,EAAnC;EACA,MAAMC,SAAS,GAAGC,QAAQ,CAAC,MAAMN,KAAK,CAACA,KAAN,CAAYO,KAAZ,IAAqB,OAA5B,CAA1B;EACA,MAAMC,OAAO,GAAGF,QAAQ,CAAC,MAAMN,KAAK,CAACA,KAAN,CAAYS,GAAZ,IAAmB,KAA1B,CAAxB;EACA,MAAMC,YAAY,GAAGJ,QAAQ,CAAC,MAAMN,KAAK,CAACA,KAAN,CAAYW,QAAZ,IAAwB,UAA/B,CAA7B;EACA,MAAMC,YAAY,GAAGN,QAAQ,CAAC,MAAM;IAClC,OAAON,KAAK,CAACf,IAAN,CAAW4B,MAAX,CAAmBC,IAAD,IAAU;MACjC,IAAI,OAAOd,KAAK,CAACF,YAAb,KAA8B,UAAlC,EAA8C;QAC5C,OAAOE,KAAK,CAACF,YAAN,CAAmBI,UAAU,CAACa,KAA9B,EAAqCD,IAArC,CAAP;MACD,CAFD,MAEO;QACL,MAAMP,KAAK,GAAGO,IAAI,CAACT,SAAS,CAACW,KAAX,CAAJ,IAAyBF,IAAI,CAACN,OAAO,CAACQ,KAAT,CAAJ,CAAoBC,QAApB,EAAvC;QACA,OAAOV,KAAK,CAACW,WAAN,GAAoBC,QAApB,CAA6BjB,UAAU,CAACa,KAAX,CAAiBG,WAAjB,EAA7B,CAAP;MACD;IACF,CAPM,CAAP;EAQD,CAT4B,CAA7B;EAUA,MAAME,aAAa,GAAGd,QAAQ,CAAC,MAAM;IACnC,OAAOM,YAAY,CAACI,KAAb,CAAmBH,MAAnB,CAA2BC,IAAD,IAAU,CAACA,IAAI,CAACJ,YAAY,CAACM,KAAd,CAAzC,CAAP;EACD,CAF6B,CAA9B;EAGA,MAAMK,cAAc,GAAGf,QAAQ,CAAC,MAAM;IACpC,MAAMgB,aAAa,GAAGpB,UAAU,CAACqB,OAAX,CAAmBC,MAAzC;IACA,MAAMC,UAAU,GAAGzB,KAAK,CAACf,IAAN,CAAWuC,MAA9B;IACA,MAAM;MAAEE,SAAF;MAAaC;IAAb,IAA4B3B,KAAK,CAACJ,MAAxC;;IACA,IAAI8B,SAAS,IAAIC,UAAjB,EAA6B;MAC3B,OAAOL,aAAa,GAAG,CAAhB,GAAoBK,UAAU,CAACC,OAAX,CAAmB,cAAnB,EAAmCN,aAAa,CAACL,QAAd,EAAnC,EAA6DW,OAA7D,CAAqE,YAArE,EAAmFH,UAAU,CAACR,QAAX,EAAnF,CAApB,GAAgIS,SAAS,CAACE,OAAV,CAAkB,YAAlB,EAAgCH,UAAU,CAACR,QAAX,EAAhC,CAAvI;IACD,CAFD,MAEO;MACL,OAAQ,GAAEK,aAAc,IAAGG,UAAW,EAAtC;IACD;EACF,CAT8B,CAA/B;EAUA,MAAMI,eAAe,GAAGvB,QAAQ,CAAC,MAAM;IACrC,MAAMgB,aAAa,GAAGpB,UAAU,CAACqB,OAAX,CAAmBC,MAAzC;IACA,OAAOF,aAAa,GAAG,CAAhB,IAAqBA,aAAa,GAAGF,aAAa,CAACJ,KAAd,CAAoBQ,MAAhE;EACD,CAH+B,CAAhC;;EAIA,MAAMM,gBAAgB,GAAG,MAAM;IAC7B,MAAMC,iBAAiB,GAAGX,aAAa,CAACJ,KAAd,CAAoBgB,GAApB,CAAyBlB,IAAD,IAAUA,IAAI,CAACN,OAAO,CAACQ,KAAT,CAAtC,CAA1B;IACAd,UAAU,CAAC+B,UAAX,GAAwBF,iBAAiB,CAACP,MAAlB,GAA2B,CAA3B,IAAgCO,iBAAiB,CAACG,KAAlB,CAAyBpB,IAAD,IAAUZ,UAAU,CAACqB,OAAX,CAAmBJ,QAAnB,CAA4BL,IAA5B,CAAlC,CAAxD;EACD,CAHD;;EAIA,MAAMqB,sBAAsB,GAAInB,KAAD,IAAW;IACxCd,UAAU,CAACqB,OAAX,GAAqBP,KAAK,GAAGI,aAAa,CAACJ,KAAd,CAAoBgB,GAApB,CAAyBlB,IAAD,IAAUA,IAAI,CAACN,OAAO,CAACQ,KAAT,CAAtC,CAAH,GAA4D,EAAtF;EACD,CAFD;;EAGAoB,KAAK,CAAC,MAAMlC,UAAU,CAACqB,OAAlB,EAA2B,CAACc,GAAD,EAAMC,MAAN,KAAiB;IAC/CR,gBAAgB;;IAChB,IAAI5B,UAAU,CAACqC,iBAAf,EAAkC;MAChC,MAAMC,SAAS,GAAGH,GAAG,CAACI,MAAJ,CAAWH,MAAX,EAAmBzB,MAAnB,CAA2B6B,CAAD,IAAO,CAACL,GAAG,CAAClB,QAAJ,CAAauB,CAAb,CAAD,IAAoB,CAACJ,MAAM,CAACnB,QAAP,CAAgBuB,CAAhB,CAAtD,CAAlB;MACAvC,IAAI,CAACpB,oBAAD,EAAuBsD,GAAvB,EAA4BG,SAA5B,CAAJ;IACD,CAHD,MAGO;MACLrC,IAAI,CAACpB,oBAAD,EAAuBsD,GAAvB,CAAJ;MACAnC,UAAU,CAACqC,iBAAX,GAA+B,IAA/B;IACD;EACF,CATI,CAAL;EAUAH,KAAK,CAAChB,aAAD,EAAgB,MAAM;IACzBU,gBAAgB;EACjB,CAFI,CAAL;EAGAM,KAAK,CAAC,MAAMpC,KAAK,CAACf,IAAb,EAAmB,MAAM;IAC5B,MAAMsC,OAAO,GAAG,EAAhB;IACA,MAAMoB,gBAAgB,GAAG/B,YAAY,CAACI,KAAb,CAAmBgB,GAAnB,CAAwBlB,IAAD,IAAUA,IAAI,CAACN,OAAO,CAACQ,KAAT,CAArC,CAAzB;IACAd,UAAU,CAACqB,OAAX,CAAmBqB,OAAnB,CAA4B9B,IAAD,IAAU;MACnC,IAAI6B,gBAAgB,CAACxB,QAAjB,CAA0BL,IAA1B,CAAJ,EAAqC;QACnCS,OAAO,CAACsB,IAAR,CAAa/B,IAAb;MACD;IACF,CAJD;IAKAZ,UAAU,CAACqC,iBAAX,GAA+B,KAA/B;IACArC,UAAU,CAACqB,OAAX,GAAqBA,OAArB;EACD,CAVI,CAAL;EAWAa,KAAK,CAAC,MAAMpC,KAAK,CAACD,cAAb,EAA6B,CAACsC,GAAD,EAAMC,MAAN,KAAiB;IACjD,IAAIA,MAAM,IAAID,GAAG,CAACb,MAAJ,KAAec,MAAM,CAACd,MAAhC,IAA0Ca,GAAG,CAACH,KAAJ,CAAWpB,IAAD,IAAUwB,MAAM,CAACnB,QAAP,CAAgBL,IAAhB,CAApB,CAA9C,EACE;IACF,MAAMS,OAAO,GAAG,EAAhB;IACA,MAAMQ,iBAAiB,GAAGX,aAAa,CAACJ,KAAd,CAAoBgB,GAApB,CAAyBlB,IAAD,IAAUA,IAAI,CAACN,OAAO,CAACQ,KAAT,CAAtC,CAA1B;IACAqB,GAAG,CAACO,OAAJ,CAAa9B,IAAD,IAAU;MACpB,IAAIiB,iBAAiB,CAACZ,QAAlB,CAA2BL,IAA3B,CAAJ,EAAsC;QACpCS,OAAO,CAACsB,IAAR,CAAa/B,IAAb;MACD;IACF,CAJD;IAKAZ,UAAU,CAACqC,iBAAX,GAA+B,KAA/B;IACArC,UAAU,CAACqB,OAAX,GAAqBA,OAArB;EACD,CAZI,EAYF;IACDuB,SAAS,EAAE;EADV,CAZE,CAAL;EAeA,OAAO;IACLzC,SADK;IAELG,OAFK;IAGLE,YAHK;IAILE,YAJK;IAKLQ,aALK;IAMLC,cANK;IAOLQ,eAPK;IAQLC,gBARK;IASLK;EATK,CAAP;AAWF,CAzFY","names":["CHECKED_CHANGE_EVENT","useCheckProps","data","type","Array","default","optionRender","Function","placeholder","String","title","filterable","Boolean","format","Object","filterMethod","defaultChecked","props","useCheck","panelState","emit","getCurrentInstance","labelProp","computed","label","keyProp","key","disabledProp","disabled","filteredData","filter","item","query","value","toString","toLowerCase","includes","checkableData","checkedSummary","checkedLength","checked","length","dataLength","noChecked","hasChecked","replace","isIndeterminate","updateAllChecked","checkableDataKeys","map","allChecked","every","handleAllCheckedChange","watch","val","oldVal","checkChangeByUser","movedKeys","concat","v","filteredDataKeys","forEach","push","immediate"],"sources":["../../../../../../packages/components/transfer/src/useCheck.ts"],"sourcesContent":["import { computed, getCurrentInstance, watch } from 'vue'\n\nimport type { ExtractPropTypes } from 'vue'\nimport type { Key, TransferPanelState } from './transfer'\n\nexport const CHECKED_CHANGE_EVENT = 'checked-change'\n\nexport const useCheckProps = {\n  data: {\n    type: Array,\n    default() {\n      return []\n    },\n  },\n  optionRender: Function,\n  placeholder: String,\n  title: String,\n  filterable: Boolean,\n  format: Object,\n  filterMethod: Function,\n  defaultChecked: Array,\n  props: Object,\n}\n\nexport const useCheck = (\n  props: ExtractPropTypes<typeof useCheckProps>,\n  panelState: TransferPanelState\n) => {\n  const { emit } = getCurrentInstance()\n\n  const labelProp = computed(() => props.props.label || 'label')\n\n  const keyProp = computed(() => props.props.key || 'key')\n\n  const disabledProp = computed(() => props.props.disabled || 'disabled')\n\n  const filteredData = computed(() => {\n    return props.data.filter((item) => {\n      if (typeof props.filterMethod === 'function') {\n        return props.filterMethod(panelState.query, item)\n      } else {\n        const label = item[labelProp.value] || item[keyProp.value].toString()\n        return label.toLowerCase().includes(panelState.query.toLowerCase())\n      }\n    })\n  })\n\n  const checkableData = computed(() => {\n    return filteredData.value.filter((item) => !item[disabledProp.value])\n  })\n\n  const checkedSummary = computed(() => {\n    const checkedLength = panelState.checked.length\n    const dataLength = props.data.length\n    const { noChecked, hasChecked } = props.format\n\n    if (noChecked && hasChecked) {\n      return checkedLength > 0\n        ? hasChecked\n            .replace(/\\${checked}/g, checkedLength.toString())\n            .replace(/\\${total}/g, dataLength.toString())\n        : noChecked.replace(/\\${total}/g, dataLength.toString())\n    } else {\n      return `${checkedLength}/${dataLength}`\n    }\n  })\n\n  const isIndeterminate = computed(() => {\n    const checkedLength = panelState.checked.length\n    return checkedLength > 0 && checkedLength < checkableData.value.length\n  })\n\n  const updateAllChecked = () => {\n    const checkableDataKeys = checkableData.value.map(\n      (item) => item[keyProp.value]\n    )\n    panelState.allChecked =\n      checkableDataKeys.length > 0 &&\n      checkableDataKeys.every((item) => panelState.checked.includes(item))\n  }\n\n  const handleAllCheckedChange = (value: Key[]) => {\n    panelState.checked = value\n      ? checkableData.value.map((item) => item[keyProp.value])\n      : []\n  }\n\n  watch(\n    () => panelState.checked,\n    (val, oldVal) => {\n      updateAllChecked()\n\n      if (panelState.checkChangeByUser) {\n        const movedKeys = val\n          .concat(oldVal)\n          .filter((v) => !val.includes(v) || !oldVal.includes(v))\n        emit(CHECKED_CHANGE_EVENT, val, movedKeys)\n      } else {\n        emit(CHECKED_CHANGE_EVENT, val)\n        panelState.checkChangeByUser = true\n      }\n    }\n  )\n\n  watch(checkableData, () => {\n    updateAllChecked()\n  })\n\n  watch(\n    () => props.data,\n    () => {\n      const checked = []\n      const filteredDataKeys = filteredData.value.map(\n        (item) => item[keyProp.value]\n      )\n      panelState.checked.forEach((item) => {\n        if (filteredDataKeys.includes(item)) {\n          checked.push(item)\n        }\n      })\n      panelState.checkChangeByUser = false\n      panelState.checked = checked\n    }\n  )\n\n  watch(\n    () => props.defaultChecked,\n    (val, oldVal) => {\n      if (\n        oldVal &&\n        val.length === oldVal.length &&\n        val.every((item) => oldVal.includes(item))\n      )\n        return\n\n      const checked = []\n      const checkableDataKeys = checkableData.value.map(\n        (item) => item[keyProp.value]\n      )\n\n      val.forEach((item) => {\n        if (checkableDataKeys.includes(item)) {\n          checked.push(item)\n        }\n      })\n      panelState.checkChangeByUser = false\n      panelState.checked = checked\n    },\n    {\n      immediate: true,\n    }\n  )\n\n  return {\n    labelProp,\n    keyProp,\n    disabledProp,\n    filteredData,\n    checkableData,\n    checkedSummary,\n    isIndeterminate,\n    updateAllChecked,\n    handleAllCheckedChange,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}