{"ast":null,"code":"import { defineComponent, ref, provide, h } from 'vue';\nimport dayjs from 'dayjs';\nimport customParseFormat from 'dayjs/plugin/customParseFormat.js';\nimport { DEFAULT_FORMATS_TIME } from './common/constant2.mjs';\nimport CommonPicker from './common/picker2.mjs';\nimport TimePickPanel from './time-picker-com/panel-time-pick2.mjs';\nimport TimeRangePanel from './time-picker-com/panel-time-range2.mjs';\nimport { timePickerDefaultProps } from './common/props2.mjs';\ndayjs.extend(customParseFormat);\nvar TimePicker = defineComponent({\n  name: \"ElTimePicker\",\n  install: null,\n  props: { ...timePickerDefaultProps,\n    isRange: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: [\"update:modelValue\"],\n\n  setup(props, ctx) {\n    const commonPicker = ref(null);\n    const type = props.isRange ? \"timerange\" : \"time\";\n    const panel = props.isRange ? TimeRangePanel : TimePickPanel;\n    const refProps = { ...props,\n      focus: () => {\n        var _a;\n\n        (_a = commonPicker.value) == null ? void 0 : _a.handleFocusInput();\n      },\n      blur: () => {\n        var _a;\n\n        (_a = commonPicker.value) == null ? void 0 : _a.handleBlurInput();\n      }\n    };\n    provide(\"ElPopperOptions\", props.popperOptions);\n    ctx.expose(refProps);\n    return () => {\n      var _a;\n\n      const format = (_a = props.format) != null ? _a : DEFAULT_FORMATS_TIME;\n      return h(CommonPicker, { ...props,\n        format,\n        type,\n        ref: commonPicker,\n        \"onUpdate:modelValue\": value => ctx.emit(\"update:modelValue\", value)\n      }, {\n        default: scopedProps => h(panel, scopedProps)\n      });\n    };\n  }\n\n});\nexport { TimePicker as default };","map":{"version":3,"mappings":";;;;;;;;AAQAA,KAAK,CAACC,MAAN,CAAaC,iBAAb;AACA,iBAAeC,eAAe,CAAC;EAC7BC,IAAI,EAAE,cADuB;EAE7BC,OAAO,EAAE,IAFoB;EAG7BC,KAAK,EAAE,EACL,GAAGC,sBADE;IAELC,OAAO,EAAE;MACPC,IAAI,EAAEC,OADC;MAEPC,OAAO,EAAE;IAFF;EAFJ,CAHsB;EAU7BC,KAAK,EAAE,CAAC,mBAAD,CAVsB;;EAW7BC,KAAK,CAACP,KAAD,EAAQQ,GAAR,EAAa;IAChB,MAAMC,YAAY,GAAGC,GAAG,CAAC,IAAD,CAAxB;IACA,MAAMP,IAAI,GAAGH,KAAK,CAACE,OAAN,GAAgB,WAAhB,GAA8B,MAA3C;IACA,MAAMS,KAAK,GAAGX,KAAK,CAACE,OAAN,GAAgBU,cAAhB,GAAiCC,aAA/C;IACA,MAAMC,QAAQ,GAAG,EACf,GAAGd,KADY;MAEfe,KAAK,EAAE,MAAM;QACX,IAAIC,EAAJ;;QACA,CAACA,EAAE,GAAGP,YAAY,CAACQ,KAAnB,KAA6B,IAA7B,GAAoC,KAAK,CAAzC,GAA6CD,EAAE,CAACE,gBAAH,EAA7C;MACD,CALc;MAMfC,IAAI,EAAE,MAAM;QACV,IAAIH,EAAJ;;QACA,CAACA,EAAE,GAAGP,YAAY,CAACQ,KAAnB,KAA6B,IAA7B,GAAoC,KAAK,CAAzC,GAA6CD,EAAE,CAACI,eAAH,EAA7C;MACD;IATc,CAAjB;IAWAC,OAAO,CAAC,iBAAD,EAAoBrB,KAAK,CAACsB,aAA1B,CAAP;IACAd,GAAG,CAACe,MAAJ,CAAWT,QAAX;IACA,OAAO,MAAM;MACX,IAAIE,EAAJ;;MACA,MAAMQ,MAAM,GAAG,CAACR,EAAE,GAAGhB,KAAK,CAACwB,MAAZ,KAAuB,IAAvB,GAA8BR,EAA9B,GAAmCS,oBAAlD;MACA,OAAOC,CAAC,CAACC,YAAD,EAAS,EACf,GAAG3B,KADY;QAEfwB,MAFe;QAGfrB,IAHe;QAIfO,GAAG,EAAED,YAJU;QAKf,uBAAwBQ,KAAD,IAAWT,GAAG,CAACoB,IAAJ,CAAS,mBAAT,EAA8BX,KAA9B;MALnB,CAAT,EAML;QACDZ,OAAO,EAAGwB,WAAD,IAAiBH,CAAC,CAACf,KAAD,EAAQkB,WAAR;MAD1B,CANK,CAAR;IASD,CAZD;EAaD;;AAzC4B,CAAD,CAA9B","names":["dayjs","extend","customParseFormat","defineComponent","name","install","props","timePickerDefaultProps","isRange","type","Boolean","default","emits","setup","ctx","commonPicker","ref","panel","TimeRangePanel","TimePickPanel","refProps","focus","_a","value","handleFocusInput","blur","handleBlurInput","provide","popperOptions","expose","format","DEFAULT_FORMATS_TIME","h","Picker","emit","scopedProps"],"sources":["../../../../../../packages/components/time-picker/src/time-picker.ts"],"sourcesContent":["import { defineComponent, h, provide, ref } from 'vue'\nimport dayjs from 'dayjs'\nimport customParseFormat from 'dayjs/plugin/customParseFormat.js'\nimport { DEFAULT_FORMATS_TIME } from './common/constant'\nimport Picker from './common/picker.vue'\nimport TimePickPanel from './time-picker-com/panel-time-pick.vue'\nimport TimeRangePanel from './time-picker-com/panel-time-range.vue'\nimport { timePickerDefaultProps } from './common/props'\ndayjs.extend(customParseFormat)\n\nexport default defineComponent({\n  name: 'ElTimePicker',\n  install: null,\n  props: {\n    ...timePickerDefaultProps,\n    isRange: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  emits: ['update:modelValue'],\n  setup(props, ctx) {\n    const commonPicker = ref(null)\n    const type = props.isRange ? 'timerange' : 'time'\n    const panel = props.isRange ? TimeRangePanel : TimePickPanel\n    const refProps = {\n      ...props,\n      focus: () => {\n        commonPicker.value?.handleFocusInput()\n      },\n      blur: () => {\n        commonPicker.value?.handleBlurInput()\n      },\n    }\n    provide('ElPopperOptions', props.popperOptions)\n    ctx.expose(refProps)\n    return () => {\n      const format = props.format ?? DEFAULT_FORMATS_TIME\n      return h(\n        Picker,\n        {\n          ...props, // allow format to be overwrite\n          format,\n          type,\n          ref: commonPicker,\n          'onUpdate:modelValue': (value) =>\n            ctx.emit('update:modelValue', value),\n        },\n        {\n          default: (scopedProps) => h(panel, scopedProps),\n        }\n      )\n    }\n  },\n})\n"]},"metadata":{},"sourceType":"module"}