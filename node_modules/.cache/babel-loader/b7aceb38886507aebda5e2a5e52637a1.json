{"ast":null,"code":"import { defineComponent, ref, computed, watch, nextTick, openBlock, createElementBlock, createElementVNode, Fragment, renderList, normalizeClass, withKeys, withModifiers, toDisplayString } from 'vue';\nimport dayjs from 'dayjs';\nimport '../../../../hooks/index2.mjs';\nimport '../../../time-picker/index2.mjs';\nimport '../../../../utils/index2.mjs';\nimport _export_sfc from '../../../../_virtual/plugin-vue_export-helper.mjs';\nimport { rangeArr } from '../../../time-picker/src/common/date-utils2.mjs';\nimport { useLocale } from '../../../../hooks/use-locale/index2.mjs';\nimport { castArray } from '../../../../utils/arrays2.mjs';\nimport { hasClass } from '../../../../utils/dom/style2.mjs';\n\nconst datesInYear = (year, lang) => {\n  const firstDay = dayjs(String(year)).locale(lang).startOf(\"year\");\n  const lastDay = firstDay.endOf(\"year\");\n  const numOfDays = lastDay.dayOfYear();\n  return rangeArr(numOfDays).map(n => firstDay.add(n, \"day\").toDate());\n};\n\nconst _sfc_main = defineComponent({\n  props: {\n    disabledDate: {\n      type: Function\n    },\n    parsedValue: {\n      type: Object\n    },\n    date: {\n      type: Object\n    }\n  },\n  emits: [\"pick\"],\n  expose: [\"focus\"],\n\n  setup(props, ctx) {\n    const {\n      t,\n      lang\n    } = useLocale();\n    const tbodyRef = ref();\n    const currentCellRef = ref();\n    const startYear = computed(() => {\n      return Math.floor(props.date.year() / 10) * 10;\n    });\n    watch(() => props.date, async () => {\n      var _a, _b;\n\n      if ((_a = tbodyRef.value) == null ? void 0 : _a.contains(document.activeElement)) {\n        await nextTick();\n        (_b = currentCellRef.value) == null ? void 0 : _b.focus();\n      }\n    });\n\n    const focus = () => {\n      var _a;\n\n      (_a = currentCellRef.value) == null ? void 0 : _a.focus();\n    };\n\n    const getCellStyle = year => {\n      const style = {};\n      const today = dayjs().locale(lang.value);\n      style.disabled = props.disabledDate ? datesInYear(year, lang.value).every(props.disabledDate) : false;\n      style.current = castArray(props.parsedValue).findIndex(_ => _.year() === year) >= 0;\n      style.today = today.year() === year;\n      return style;\n    };\n\n    const isSelectedCell = year => {\n      return year === startYear.value && props.date.year() < startYear.value && props.date.year() > startYear.value + 9 || castArray(props.date).findIndex(_ => _.year() === year) >= 0;\n    };\n\n    const handleYearTableClick = event => {\n      const clickTarget = event.target;\n      const target = clickTarget.closest(\"td\");\n\n      if (target) {\n        if (hasClass(target.parentNode, \"disabled\")) return;\n        const year = target.textContent || target.innerText;\n        ctx.emit(\"pick\", Number(year));\n      }\n    };\n\n    return {\n      t,\n      tbodyRef,\n      currentCellRef,\n      startYear,\n      focus,\n      isSelectedCell,\n      getCellStyle,\n      handleYearTableClick\n    };\n  }\n\n});\n\nconst _hoisted_1 = [\"aria-label\"];\nconst _hoisted_2 = {\n  ref: \"tbodyRef\"\n};\nconst _hoisted_3 = [\"aria-selected\", \"tabindex\"];\nconst _hoisted_4 = {\n  class: \"cell\"\n};\nconst _hoisted_5 = {\n  key: 1\n};\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"table\", {\n    role: \"grid\",\n    \"aria-label\": _ctx.t(\"el.datepicker.yearTablePrompt\"),\n    class: \"el-year-table\",\n    onClick: _cache[2] || (_cache[2] = (...args) => _ctx.handleYearTableClick && _ctx.handleYearTableClick(...args))\n  }, [createElementVNode(\"tbody\", _hoisted_2, [(openBlock(), createElementBlock(Fragment, null, renderList(3, (n, i) => {\n    return createElementVNode(\"tr\", {\n      key: i\n    }, [(openBlock(), createElementBlock(Fragment, null, renderList(4, (nn, j) => {\n      return openBlock(), createElementBlock(Fragment, {\n        key: i + \"_\" + j\n      }, [i * 4 + j < 10 ? (openBlock(), createElementBlock(\"td\", {\n        key: 0,\n        ref_for: true,\n        ref: el => _ctx.isSelectedCell(_ctx.startYear + i * 4 + j) && (_ctx.currentCellRef = el),\n        class: normalizeClass([\"available\", _ctx.getCellStyle(_ctx.startYear + i * 4 + j)]),\n        \"aria-selected\": `${_ctx.isSelectedCell(_ctx.startYear + i * 4 + j)}`,\n        tabindex: _ctx.isSelectedCell(_ctx.startYear + i * 4 + j) ? 0 : -1,\n        onKeydown: [_cache[0] || (_cache[0] = withKeys(withModifiers((...args) => _ctx.handleYearTableClick && _ctx.handleYearTableClick(...args), [\"prevent\", \"stop\"]), [\"space\"])), _cache[1] || (_cache[1] = withKeys(withModifiers((...args) => _ctx.handleYearTableClick && _ctx.handleYearTableClick(...args), [\"prevent\", \"stop\"]), [\"enter\"]))]\n      }, [createElementVNode(\"span\", _hoisted_4, toDisplayString(_ctx.startYear + i * 4 + j), 1)], 42, _hoisted_3)) : (openBlock(), createElementBlock(\"td\", _hoisted_5))], 64);\n    }), 64))]);\n  }), 64))], 512)], 8, _hoisted_1);\n}\n\nvar YearTable = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/date-picker/src/date-picker-com/basic-year-table.vue\"]]);\n\nexport { YearTable as default };","map":{"version":3,"mappings":";;;;;;;;;;;AA0CA,MAAMA,cAAc,CAACC,IAAD,EAAcC,IAAd,KAA+B;EAC3C,iBAAWC,KAAM,QAAOF,IAAP,EAAN,CAAoBG,MAApB,CAA2BF,IAA3B,EAAiCG,OAAjC,CAAyC,MAAzC,CAAX;EACA,gBAAUC,QAAS,MAAT,CAAe,MAAf,CAAV;EACA,kBAAYC,QAAQC,SAAR,EAAZ;EACN,OAAOC,QAAS,WAAT,CAAoBC,GAApB,CAAyBC,CAAD,IAAOL,QAAS,IAAT,CAAaK,CAAb,EAAgB,KAAhB,EAAuBC,MAAvB,EAA/B,CAAP;AACF,CALA;;AAOA,MAAKC,YAAaC,eAAa;EAC7BC,KAAO;IACLC,YAAc;MACZC,IAAM;IADM,CADT;IAILC,WAAa;MACXD,IAAM;IADK,CAJR;IAOLE,IAAM;MACJF,IAAM;IADF;EAPD,CADsB;EAa7BG,OAAO,CAAC,MAAD,CAbsB;EAc7BC,QAAQ,CAAC,OAAD,CAdqB;;EAgB7BC,MAAMP,KAAN,EAAaQ,GAAb,EAAkB;IACV;MAAEC,CAAF;MAAKtB;IAAL,IAAcuB,SAAU,EAAxB;IACN,MAAMC,WAAWC,GAAiB,EAAlC;IACA,MAAMC,iBAAiBD,GAAiB,EAAxC;IACM,kBAAYE,SAAS,MAAM;MAC/B,OAAOC,KAAKC,KAAL,CAAWhB,MAAMI,IAAN,CAAWlB,IAAX,KAAoB,EAA/B,IAAqC,EAA5C;IACD,CAFiB,CAAZ;IAKJ+B,YAAMjB,KAAM,KAAZ,EACA,YAAY;MACV,IAAIkB,EAAJ,EAAaC,EAAb;;MACE,UAAeR,cAAf,KAAe,IAAf,GAAe,MAAf,GAAeO,mCAAf,EAAe;QACf;QACF;MAEJ;IAEA,CATE;;IAUA;MACF;;MAEM,oBAAgB,CAASE,KAAzB,KAAyB,IAAzB,GAAyB,MAAzB,GAAyBF,UAAzB;IACJ,CAJA;;IAKA,kBAAc,GAAMhC,IAAN,IAAe;MAEvB;MAIN,MAAMmC,KACJ,kBAAgBlC,UAAhB,CADF;MAGMmC,iBAActB,qBAAWf,uDAAX,GAAW,KAAzB;MAECqC;MACTA;MAEM;IAED,CAhBH;;IAqBF;MAEM,mCAA8CtB,mCAA9C,IAA8CA,uCAA9C,IAA8CuB,4DAA9C;IACJ,CAHF;;IAIQ,0BAAqB,YAAY;MACvC,MAAYC,0BAAZ;MACM,eAAUA,WAAe,QAAf,CAAqC,IAArC,CAAV;;MAAkD;QAChD,aAAOC,MAAO,WAAd,EAAc,UAAd,GACN;QACF;QACFjB;MACO;IACL,CARM;;IASN;MACAC,CADA;MAEAE,QAFA;MAGAE,cAHA;MAIAa,SAJA;MAKAC,KALA;MAMAC,cANA;MAOFC,YAPE;MAQJC;IARI;;;AA1EyB,EAA/B;;;AA1BkB;EAAAlB;AAAA;;;;;;KAMR;;;AAAA,SA3BDmB,WA2BC,CA3BDC,IA2BC,EA3BDC,MA2BC,EA3BDC,MA2BC,EA3BDC,MA2BC,EA3BDC,KA2BC,EA3BDC,QA2BC,EA3BD;EAAA,gBACS;IACdC,IAAM,QADQ;IAEb,cAAON,uCAFM;IAENO,sBAFM;IAIdC,8BAqBQ,CArBR,IAqBQ,4EArBR;EAJc,GAyBN,mBADD,sBAnBoB,EAAMC,+BAkBlB,gCAjBiB7C,CAiBjB,EAjBkB8C,CAiBlB,KAjBY;;;SAAcD,aAAUE;MAAA;QAErCC,GAAC,MAAQ,GAAR,GAAQC;MAF4B,GAexC;QAZFD;QAIDE,OAAK,EAAC;QAELlC,eAAa,CAAKgB,cAAlB,CAAkBI,iBAA2BU,KAA3B,GAA2BG,CAA7C,MAAqDb,IAAC,eAAD,GAACe,EAAtD;QACAR,KAAU,+BAA2BP,kBAAQA,IAAC,UAAD,GAACU,KAAD,GAACG,CAAT,CAA3B;QACV,iBAAO;QAAAG;QAAyCC,YACAhB,gKADA;SAGN,CAEhCiB,sFAFgC,yEACxC,CAfwC;KAAA;GAiBpC,MAlBY,EAmBpB,MACC,CAzBM,gBADT","names":["datesInYear","year","lang","dayjs","locale","startOf","firstDay","lastDay","dayOfYear","rangeArr","map","n","toDate","_sfc_main","defineComponent","props","disabledDate","type","parsedValue","date","emits","expose","setup","ctx","t","useLocale","tbodyRef","ref","currentCellRef","computed","Math","floor","watch","_a","_b","value","today","style","castArray","clickTarget","target","startYear","focus","isSelectedCell","getCellStyle","handleYearTableClick","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","role","class","onClick","_openBlock","i","_createElementBlock","key","j","ref_for","el","tabindex","onKeydown","_createElementVNode"],"sources":["../../../../../../../packages/components/date-picker/src/date-picker-com/basic-year-table.vue"],"sourcesContent":["<template>\n  <table\n    role=\"grid\"\n    :aria-label=\"t('el.datepicker.yearTablePrompt')\"\n    class=\"el-year-table\"\n    @click=\"handleYearTableClick\"\n  >\n    <tbody ref=\"tbodyRef\">\n      <tr v-for=\"(n, i) in 3\" :key=\"i\">\n        <template v-for=\"(nn, j) in 4\" :key=\"i + '_' + j\">\n          <td\n            v-if=\"i * 4 + j < 10\"\n            :ref=\"\n              (el) =>\n                isSelectedCell(startYear + i * 4 + j) && (currentCellRef = el)\n            \"\n            class=\"available\"\n            :class=\"getCellStyle(startYear + i * 4 + j)\"\n            :aria-selected=\"`${isSelectedCell(startYear + i * 4 + j)}`\"\n            :tabindex=\"isSelectedCell(startYear + i * 4 + j) ? 0 : -1\"\n            @keydown.space.prevent.stop=\"handleYearTableClick\"\n            @keydown.enter.prevent.stop=\"handleYearTableClick\"\n          >\n            <span class=\"cell\">{{ startYear + i * 4 + j }}</span>\n          </td>\n          <td v-else />\n        </template>\n      </tr>\n    </tbody>\n  </table>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, nextTick, ref, watch } from 'vue'\nimport dayjs from 'dayjs'\nimport { useLocale } from '@element-plus/hooks'\nimport { rangeArr } from '@element-plus/components/time-picker'\nimport { castArray, hasClass } from '@element-plus/utils'\n\nimport type { PropType } from 'vue'\nimport type { Dayjs } from 'dayjs'\n\nconst datesInYear = (year: Dayjs, lang: string) => {\n  const firstDay = dayjs(String(year)).locale(lang).startOf('year')\n  const lastDay = firstDay.endOf('year')\n  const numOfDays = lastDay.dayOfYear()\n  return rangeArr(numOfDays).map((n) => firstDay.add(n, 'day').toDate())\n}\n\nexport default defineComponent({\n  props: {\n    disabledDate: {\n      type: Function as PropType<(_: Date) => void>,\n    },\n    parsedValue: {\n      type: Object as PropType<Dayjs>,\n    },\n    date: {\n      type: Object as PropType<Dayjs>,\n    },\n  },\n\n  emits: ['pick'],\n  expose: ['focus'],\n\n  setup(props, ctx) {\n    const { t, lang } = useLocale()\n    const tbodyRef = ref<HTMLElement>()\n    const currentCellRef = ref<HTMLElement>()\n    const startYear = computed(() => {\n      return Math.floor(props.date.year() / 10) * 10\n    })\n\n    watch(\n      () => props.date,\n      async () => {\n        if (tbodyRef.value?.contains(document.activeElement)) {\n          await nextTick()\n          currentCellRef.value?.focus()\n        }\n      }\n    )\n\n    const focus = () => {\n      currentCellRef.value?.focus()\n    }\n\n    const getCellStyle = (year) => {\n      const style = {} as any\n      const today = dayjs().locale(lang.value)\n\n      style.disabled = props.disabledDate\n        ? datesInYear(year, lang.value).every(props.disabledDate)\n        : false\n\n      style.current =\n        castArray(props.parsedValue).findIndex((_) => _.year() === year) >= 0\n\n      style.today = today.year() === year\n\n      return style\n    }\n\n    const isSelectedCell = (year) => {\n      return (\n        (year === startYear.value &&\n          props.date.year() < startYear.value &&\n          props.date.year() > startYear.value + 9) ||\n        castArray(props.date).findIndex((_) => _.year() === year) >= 0\n      )\n    }\n\n    const handleYearTableClick = (event: MouseEvent) => {\n      const clickTarget = event.target as HTMLDivElement\n      const target = clickTarget.closest('td')\n      if (target) {\n        if (hasClass((target as any).parentNode, 'disabled')) return\n        const year = target.textContent || target.innerText\n        ctx.emit('pick', Number(year))\n      }\n    }\n    return {\n      t,\n      tbodyRef,\n      currentCellRef,\n      startYear,\n      focus,\n      isSelectedCell,\n      getCellStyle,\n      handleYearTableClick,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}