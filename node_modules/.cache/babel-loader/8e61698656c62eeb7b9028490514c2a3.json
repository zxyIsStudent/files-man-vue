{"ast":null,"code":"import '../../../constants/index2.mjs';\nimport '../../../utils/index2.mjs';\nimport { buildProps } from '../../../utils/vue/props2.mjs';\nimport { CHANGE_EVENT } from '../../../constants/event2.mjs';\nimport { isNumber } from '@vueuse/core';\nconst stepsProps = buildProps({\n  space: {\n    type: [Number, String],\n    default: \"\"\n  },\n  active: {\n    type: Number,\n    default: 0\n  },\n  direction: {\n    type: String,\n    default: \"horizontal\",\n    values: [\"horizontal\", \"vertical\"]\n  },\n  alignCenter: {\n    type: Boolean\n  },\n  simple: {\n    type: Boolean\n  },\n  finishStatus: {\n    type: String,\n    default: \"finish\",\n    values: [\"wait\", \"process\", \"finish\", \"error\", \"success\"]\n  },\n  processStatus: {\n    type: String,\n    default: \"process\",\n    values: [\"wait\", \"process\", \"finish\", \"error\", \"success\"]\n  }\n});\nconst stepsEmits = {\n  [CHANGE_EVENT]: (newVal, oldVal) => isNumber(newVal) && isNumber(oldVal)\n};\nexport { stepsEmits, stepsProps };","map":{"version":3,"mappings":";;;;;AAEY,MAACA,UAAU,GAAGC,UAAU,CAAC;EACnCC,KAAK,EAAE;IACLC,IAAI,EAAE,CAACC,MAAD,EAASC,MAAT,CADD;IAELC,OAAO,EAAE;EAFJ,CAD4B;EAKnCC,MAAM,EAAE;IACNJ,IAAI,EAAEC,MADA;IAENE,OAAO,EAAE;EAFH,CAL2B;EASnCE,SAAS,EAAE;IACTL,IAAI,EAAEE,MADG;IAETC,OAAO,EAAE,YAFA;IAGTG,MAAM,EAAE,CAAC,YAAD,EAAe,UAAf;EAHC,CATwB;EAcnCC,WAAW,EAAE;IACXP,IAAI,EAAEQ;EADK,CAdsB;EAiBnCC,MAAM,EAAE;IACNT,IAAI,EAAEQ;EADA,CAjB2B;EAoBnCE,YAAY,EAAE;IACZV,IAAI,EAAEE,MADM;IAEZC,OAAO,EAAE,QAFG;IAGZG,MAAM,EAAE,CAAC,MAAD,EAAS,SAAT,EAAoB,QAApB,EAA8B,OAA9B,EAAuC,SAAvC;EAHI,CApBqB;EAyBnCK,aAAa,EAAE;IACbX,IAAI,EAAEE,MADO;IAEbC,OAAO,EAAE,SAFI;IAGbG,MAAM,EAAE,CAAC,MAAD,EAAS,SAAT,EAAoB,QAApB,EAA8B,OAA9B,EAAuC,SAAvC;EAHK;AAzBoB,CAAD,CAAxB;AA+BA,MAACM,UAAU,GAAG;EACxB,CAACC,YAAD,GAAgB,CAACC,MAAD,EAASC,MAAT,KAAoBC,QAAQ,CAACF,MAAD,CAAR,IAAoBE,QAAQ,CAACD,MAAD;AADxC,CAAd","names":["stepsProps","buildProps","space","type","Number","String","default","active","direction","values","alignCenter","Boolean","simple","finishStatus","processStatus","stepsEmits","CHANGE_EVENT","newVal","oldVal","isNumber"],"sources":["../../../../../../packages/components/steps/src/steps.ts"],"sourcesContent":["import { CHANGE_EVENT } from '@element-plus/constants'\nimport { buildProps, isNumber } from '@element-plus/utils'\n\nimport type { ExtractPropTypes } from 'vue'\n\nexport const stepsProps = buildProps({\n  space: {\n    type: [Number, String],\n    default: '',\n  },\n  active: {\n    type: Number,\n    default: 0,\n  },\n  direction: {\n    type: String,\n    default: 'horizontal',\n    values: ['horizontal', 'vertical'] as const,\n  },\n  alignCenter: {\n    type: Boolean,\n  },\n  simple: {\n    type: Boolean,\n  },\n  finishStatus: {\n    type: String,\n    default: 'finish',\n    values: ['wait', 'process', 'finish', 'error', 'success'] as const,\n  },\n  processStatus: {\n    type: String,\n    default: 'process',\n    values: ['wait', 'process', 'finish', 'error', 'success'] as const,\n  },\n} as const)\nexport type StepsProps = ExtractPropTypes<typeof stepsProps>\n\nexport const stepsEmits = {\n  [CHANGE_EVENT]: (newVal: number, oldVal: number) =>\n    isNumber(newVal) && isNumber(oldVal),\n}\nexport type StepsEmits = typeof stepsEmits\n"]},"metadata":{},"sourceType":"module"}