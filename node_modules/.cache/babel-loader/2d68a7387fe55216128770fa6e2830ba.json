{"ast":null,"code":"import { NOOP } from '@vue/shared';\n\nconst withInstall = (main, extra) => {\n  ;\n\n  main.install = app => {\n    for (const comp of [main, ...Object.values(extra != null ? extra : {})]) {\n      app.component(comp.name, comp);\n    }\n  };\n\n  if (extra) {\n    for (const [key, comp] of Object.entries(extra)) {\n      ;\n      main[key] = comp;\n    }\n  }\n\n  return main;\n};\n\nconst withInstallFunction = (fn, name) => {\n  ;\n\n  fn.install = app => {\n    ;\n    fn._context = app._context;\n    app.config.globalProperties[name] = fn;\n  };\n\n  return fn;\n};\n\nconst withNoopInstall = component => {\n  ;\n  component.install = NOOP;\n  return component;\n};\n\nexport { withInstall, withInstallFunction, withNoopInstall };","map":{"version":3,"mappings":";;AACY,MAACA,WAAW,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB;EAC1C;;EACAD,IAAI,CAACE,OAAL,GAAgBC,GAAD,IAAS;IACtB,KAAK,MAAMC,IAAX,IAAmB,CAACJ,IAAD,EAAO,GAAGK,MAAM,CAACC,MAAP,CAAcL,KAAK,IAAI,IAAT,GAAgBA,KAAhB,GAAwB,EAAtC,CAAV,CAAnB,EAAyE;MACvEE,GAAG,CAACI,SAAJ,CAAcH,IAAI,CAACI,IAAnB,EAAyBJ,IAAzB;IACD;EACF,CAJD;;EAKA,IAAIH,KAAJ,EAAW;IACT,KAAK,MAAM,CAACQ,GAAD,EAAML,IAAN,CAAX,IAA0BC,MAAM,CAACK,OAAP,CAAeT,KAAf,CAA1B,EAAiD;MAC/C;MACAD,IAAI,CAACS,GAAD,CAAJ,GAAYL,IAAZ;IACD;EACF;;EACD,OAAOJ,IAAP;AACF,CAdY;;AAeA,MAACW,mBAAmB,GAAG,CAACC,EAAD,EAAKJ,IAAL,KAAc;EAC/C;;EACAI,EAAE,CAACV,OAAH,GAAcC,GAAD,IAAS;IACpB;IACAS,EAAE,CAACC,QAAH,GAAcV,GAAG,CAACU,QAAlB;IACAV,GAAG,CAACW,MAAJ,CAAWC,gBAAX,CAA4BP,IAA5B,IAAoCI,EAApC;EACD,CAJD;;EAKA,OAAOA,EAAP;AACF,CARY;;AASA,MAACI,eAAe,GAAIT,SAAD,IAAe;EAC5C;EACAA,SAAS,CAACL,OAAV,GAAoBe,IAApB;EACA,OAAOV,SAAP;AACF,CAJY","names":["withInstall","main","extra","install","app","comp","Object","values","component","name","key","entries","withInstallFunction","fn","_context","config","globalProperties","withNoopInstall","NOOP"],"sources":["../../../../../packages/utils/vue/install.ts"],"sourcesContent":["import { NOOP } from '@vue/shared'\n\nimport type { App } from 'vue'\nimport type { SFCInstallWithContext, SFCWithInstall } from './typescript'\n\nexport const withInstall = <T, E extends Record<string, any>>(\n  main: T,\n  extra?: E\n) => {\n  ;(main as SFCWithInstall<T>).install = (app): void => {\n    for (const comp of [main, ...Object.values(extra ?? {})]) {\n      app.component(comp.name, comp)\n    }\n  }\n\n  if (extra) {\n    for (const [key, comp] of Object.entries(extra)) {\n      ;(main as any)[key] = comp\n    }\n  }\n  return main as SFCWithInstall<T> & E\n}\n\nexport const withInstallFunction = <T>(fn: T, name: string) => {\n  ;(fn as SFCWithInstall<T>).install = (app: App) => {\n    ;(fn as SFCInstallWithContext<T>)._context = app._context\n    app.config.globalProperties[name] = fn\n  }\n\n  return fn as SFCInstallWithContext<T>\n}\n\nexport const withNoopInstall = <T>(component: T) => {\n  ;(component as SFCWithInstall<T>).install = NOOP\n\n  return component as SFCWithInstall<T>\n}\n"]},"metadata":{},"sourceType":"module"}