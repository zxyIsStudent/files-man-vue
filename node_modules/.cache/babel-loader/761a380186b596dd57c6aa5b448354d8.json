{"ast":null,"code":"const LEFT_CHECK_CHANGE_EVENT = \"left-check-change\";\nconst RIGHT_CHECK_CHANGE_EVENT = \"right-check-change\";\n\nconst useCheckedChange = (checkedState, emit) => {\n  const onSourceCheckedChange = (val, movedKeys) => {\n    checkedState.leftChecked = val;\n    if (movedKeys === void 0) return;\n    emit(LEFT_CHECK_CHANGE_EVENT, val, movedKeys);\n  };\n\n  const onTargetCheckedChange = (val, movedKeys) => {\n    checkedState.rightChecked = val;\n    if (movedKeys === void 0) return;\n    emit(RIGHT_CHECK_CHANGE_EVENT, val, movedKeys);\n  };\n\n  return {\n    onSourceCheckedChange,\n    onTargetCheckedChange\n  };\n};\n\nexport { LEFT_CHECK_CHANGE_EVENT, RIGHT_CHECK_CHANGE_EVENT, useCheckedChange };","map":{"version":3,"mappings":"AAAY,MAACA,uBAAuB,GAAG,mBAA3B;AACA,MAACC,wBAAwB,GAAG,oBAA5B;;AACA,MAACC,gBAAgB,GAAG,CAACC,YAAD,EAAeC,IAAf,KAAwB;EACtD,MAAMC,qBAAqB,GAAG,CAACC,GAAD,EAAMC,SAAN,KAAoB;IAChDJ,YAAY,CAACK,WAAb,GAA2BF,GAA3B;IACA,IAAIC,SAAS,KAAK,KAAK,CAAvB,EACE;IACFH,IAAI,CAACJ,uBAAD,EAA0BM,GAA1B,EAA+BC,SAA/B,CAAJ;EACD,CALD;;EAMA,MAAME,qBAAqB,GAAG,CAACH,GAAD,EAAMC,SAAN,KAAoB;IAChDJ,YAAY,CAACO,YAAb,GAA4BJ,GAA5B;IACA,IAAIC,SAAS,KAAK,KAAK,CAAvB,EACE;IACFH,IAAI,CAACH,wBAAD,EAA2BK,GAA3B,EAAgCC,SAAhC,CAAJ;EACD,CALD;;EAMA,OAAO;IACLF,qBADK;IAELI;EAFK,CAAP;AAIF,CAjBY","names":["LEFT_CHECK_CHANGE_EVENT","RIGHT_CHECK_CHANGE_EVENT","useCheckedChange","checkedState","emit","onSourceCheckedChange","val","movedKeys","leftChecked","onTargetCheckedChange","rightChecked"],"sources":["../../../../../../packages/components/transfer/src/useCheckedChange.ts"],"sourcesContent":["import type { Key, TransferCheckedState } from './transfer'\n\nexport const LEFT_CHECK_CHANGE_EVENT = 'left-check-change'\nexport const RIGHT_CHECK_CHANGE_EVENT = 'right-check-change'\nexport const useCheckedChange = (checkedState: TransferCheckedState, emit) => {\n  const onSourceCheckedChange = (val: Key[], movedKeys: Key[]) => {\n    checkedState.leftChecked = val\n    if (movedKeys === undefined) return\n    emit(LEFT_CHECK_CHANGE_EVENT, val, movedKeys)\n  }\n\n  const onTargetCheckedChange = (val: Key[], movedKeys: Key[]) => {\n    checkedState.rightChecked = val\n    if (movedKeys === undefined) return\n    emit(RIGHT_CHECK_CHANGE_EVENT, val, movedKeys)\n  }\n\n  return {\n    onSourceCheckedChange,\n    onTargetCheckedChange,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}