{"ast":null,"code":"import '../../../utils/index2.mjs';\nimport '../../popper/index2.mjs';\nimport '../../../hooks/index2.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props2.mjs';\nimport { useDelayedToggleProps } from '../../../hooks/use-delayed-toggle/index2.mjs';\nimport { usePopperContentProps } from '../../popper/src/content3.mjs';\nimport { POPPER_CONTAINER_SELECTOR } from '../../../hooks/use-popper-container/index2.mjs';\nimport { usePopperTriggerProps } from '../../popper/src/trigger3.mjs';\nconst triggers = [\"hover\", \"focus\", \"click\", \"contextmenu\"];\nconst useTooltipContentProps = buildProps({ ...useDelayedToggleProps,\n  ...usePopperContentProps,\n  appendTo: {\n    type: definePropType([String, Object]),\n    default: POPPER_CONTAINER_SELECTOR\n  },\n  content: {\n    type: String,\n    default: \"\"\n  },\n  rawContent: {\n    type: Boolean,\n    default: false\n  },\n  persistent: Boolean,\n  ariaLabel: String,\n  visible: {\n    type: definePropType(Boolean),\n    default: null\n  },\n  transition: {\n    type: String,\n    default: \"el-fade-in-linear\"\n  },\n  teleported: {\n    type: Boolean,\n    default: true\n  },\n  disabled: {\n    type: Boolean\n  }\n});\nconst useTooltipTriggerProps = buildProps({ ...usePopperTriggerProps,\n  disabled: Boolean,\n  trigger: {\n    type: definePropType([String, Array]),\n    default: \"hover\"\n  }\n});\nconst useTooltipProps = buildProps({\n  openDelay: {\n    type: Number\n  },\n  visibleArrow: {\n    type: Boolean,\n    default: void 0\n  },\n  hideAfter: {\n    type: Number,\n    default: 200\n  },\n  showArrow: {\n    type: Boolean,\n    default: true\n  }\n});\nexport { useTooltipContentProps, useTooltipProps, useTooltipTriggerProps };","map":{"version":3,"mappings":";;;;;;;;AASA,MAAMA,QAAQ,GAAG,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4B,aAA5B,CAAjB;AACY,MAACC,sBAAsB,GAAGC,UAAU,CAAC,EAC/C,GAAGC,qBAD4C;EAE/C,GAAGC,qBAF4C;EAG/CC,QAAQ,EAAE;IACRC,IAAI,EAAEC,cAAc,CAAC,CAACC,MAAD,EAASC,MAAT,CAAD,CADZ;IAERC,OAAO,EAAEC;EAFD,CAHqC;EAO/CC,OAAO,EAAE;IACPN,IAAI,EAAEE,MADC;IAEPE,OAAO,EAAE;EAFF,CAPsC;EAW/CG,UAAU,EAAE;IACVP,IAAI,EAAEQ,OADI;IAEVJ,OAAO,EAAE;EAFC,CAXmC;EAe/CK,UAAU,EAAED,OAfmC;EAgB/CE,SAAS,EAAER,MAhBoC;EAiB/CS,OAAO,EAAE;IACPX,IAAI,EAAEC,cAAc,CAACO,OAAD,CADb;IAEPJ,OAAO,EAAE;EAFF,CAjBsC;EAqB/CQ,UAAU,EAAE;IACVZ,IAAI,EAAEE,MADI;IAEVE,OAAO,EAAE;EAFC,CArBmC;EAyB/CS,UAAU,EAAE;IACVb,IAAI,EAAEQ,OADI;IAEVJ,OAAO,EAAE;EAFC,CAzBmC;EA6B/CU,QAAQ,EAAE;IACRd,IAAI,EAAEQ;EADE;AA7BqC,CAAD,CAApC;AAiCA,MAACO,sBAAsB,GAAGnB,UAAU,CAAC,EAC/C,GAAGoB,qBAD4C;EAE/CF,QAAQ,EAAEN,OAFqC;EAG/CS,OAAO,EAAE;IACPjB,IAAI,EAAEC,cAAc,CAAC,CAACC,MAAD,EAASgB,KAAT,CAAD,CADb;IAEPd,OAAO,EAAE;EAFF;AAHsC,CAAD,CAApC;AAQA,MAACe,eAAe,GAAGvB,UAAU,CAAC;EACxCwB,SAAS,EAAE;IACTpB,IAAI,EAAEqB;EADG,CAD6B;EAIxCC,YAAY,EAAE;IACZtB,IAAI,EAAEQ,OADM;IAEZJ,OAAO,EAAE,KAAK;EAFF,CAJ0B;EAQxCmB,SAAS,EAAE;IACTvB,IAAI,EAAEqB,MADG;IAETjB,OAAO,EAAE;EAFA,CAR6B;EAYxCoB,SAAS,EAAE;IACTxB,IAAI,EAAEQ,OADG;IAETJ,OAAO,EAAE;EAFA;AAZ6B,CAAD,CAA7B","names":["triggers","useTooltipContentProps","buildProps","useDelayedToggleProps","usePopperContentProps","appendTo","type","definePropType","String","Object","default","POPPER_CONTAINER_SELECTOR","content","rawContent","Boolean","persistent","ariaLabel","visible","transition","teleported","disabled","useTooltipTriggerProps","usePopperTriggerProps","trigger","Array","useTooltipProps","openDelay","Number","visibleArrow","hideAfter","showArrow"],"sources":["../../../../../../packages/components/tooltip/src/tooltip.ts"],"sourcesContent":["import { buildProps, definePropType } from '@element-plus/utils'\nimport {\n  usePopperContentProps,\n  usePopperTriggerProps,\n} from '@element-plus/components/popper'\nimport {\n  POPPER_CONTAINER_SELECTOR,\n  useDelayedToggleProps,\n} from '@element-plus/hooks'\nimport type Tooltip from '../src/tooltip.vue'\n\nimport type { ExtractPropTypes } from 'vue'\n\nconst triggers = ['hover', 'focus', 'click', 'contextmenu'] as const\n\nexport type Trigger = typeof triggers[number]\n\nexport const useTooltipContentProps = buildProps({\n  ...useDelayedToggleProps,\n  ...usePopperContentProps,\n  appendTo: {\n    type: definePropType<string | HTMLElement>([String, Object]),\n    default: POPPER_CONTAINER_SELECTOR,\n  },\n  content: {\n    type: String,\n    default: '',\n  },\n  rawContent: {\n    type: Boolean,\n    default: false,\n  },\n  persistent: Boolean,\n  ariaLabel: String,\n  // because model toggle prop is generated dynamically\n  // so the typing cannot be evaluated by typescript as type:\n  // [name]: { type: Boolean, default: null }\n  // so we need to declare that again for type checking.\n  visible: {\n    type: definePropType<boolean | null>(Boolean),\n    default: null,\n  },\n  transition: {\n    type: String,\n    default: 'el-fade-in-linear',\n  },\n  teleported: {\n    type: Boolean,\n    default: true,\n  },\n  disabled: {\n    type: Boolean,\n  },\n} as const)\n\nexport const useTooltipTriggerProps = buildProps({\n  ...usePopperTriggerProps,\n  disabled: Boolean,\n  trigger: {\n    type: definePropType<Trigger | Trigger[]>([String, Array]),\n    default: 'hover',\n  },\n} as const)\n\nexport const useTooltipProps = buildProps({\n  openDelay: {\n    type: Number,\n  },\n  visibleArrow: {\n    type: Boolean,\n    default: undefined,\n  },\n  hideAfter: {\n    type: Number,\n    default: 200,\n  },\n  showArrow: {\n    type: Boolean,\n    default: true,\n  },\n})\n\nexport type ElTooltipContentProps = ExtractPropTypes<\n  typeof useTooltipContentProps\n>\n\nexport type ElTooltipTriggerProps = ExtractPropTypes<\n  typeof useTooltipTriggerProps\n>\n\nexport type ElTooltipProps = ExtractPropTypes<typeof useTooltipProps> &\n  ElTooltipContentProps &\n  ElTooltipTriggerProps\n\nexport type TooltipInstance = InstanceType<typeof Tooltip>\n"]},"metadata":{},"sourceType":"module"}