{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport { reactive, ref, computed, nextTick, watch, onMounted, onBeforeMount } from 'vue';\nimport { isArray, isFunction, isObject } from '@vue/shared';\nimport { debounce, isEqual, get } from 'lodash-unified';\nimport '../../../hooks/index2.mjs';\nimport '../../../constants/index2.mjs';\nimport '../../../utils/index2.mjs';\nimport { ArrowUp } from '@element-plus/icons-vue';\nimport { useAllowCreate } from './useAllowCreate2.mjs';\nimport { flattenOptions } from './util2.mjs';\nimport { useInput } from './useInput2.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index2.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index2.mjs';\nimport { useFormItem } from '../../../hooks/use-form-item/index2.mjs';\nimport { ValidateComponentsMap } from '../../../utils/vue/icon2.mjs';\nimport { useSize } from '../../../hooks/use-common-props/index2.mjs';\nimport { CHANGE_EVENT, UPDATE_MODEL_EVENT } from '../../../constants/event2.mjs';\nimport { debugWarn } from '../../../utils/error2.mjs';\nimport { addResizeListener, removeResizeListener } from '../../../utils/dom/resize-event2.mjs';\nconst DEFAULT_INPUT_PLACEHOLDER = \"\";\nconst MINIMUM_INPUT_WIDTH = 11;\nconst TAG_BASE_WIDTH = {\n  larget: 51,\n  default: 42,\n  small: 33\n};\n\nconst useSelect = (props, emit) => {\n  const {\n    t\n  } = useLocale();\n  const nsSelectV2 = useNamespace(\"select-v2\");\n  const nsInput = useNamespace(\"input\");\n  const {\n    form: elForm,\n    formItem: elFormItem\n  } = useFormItem();\n  const states = reactive({\n    inputValue: DEFAULT_INPUT_PLACEHOLDER,\n    displayInputValue: DEFAULT_INPUT_PLACEHOLDER,\n    calculatedWidth: 0,\n    cachedPlaceholder: \"\",\n    cachedOptions: [],\n    createdOptions: [],\n    createdLabel: \"\",\n    createdSelected: false,\n    currentPlaceholder: \"\",\n    hoveringIndex: -1,\n    comboBoxHovering: false,\n    isOnComposition: false,\n    isSilentBlur: false,\n    isComposing: false,\n    inputLength: 20,\n    selectWidth: 200,\n    initialInputHeight: 0,\n    previousQuery: null,\n    previousValue: \"\",\n    query: \"\",\n    selectedLabel: \"\",\n    softFocus: false,\n    tagInMultiLine: false\n  });\n  const selectedIndex = ref(-1);\n  const popperSize = ref(-1);\n  const controlRef = ref(null);\n  const inputRef = ref(null);\n  const menuRef = ref(null);\n  const popper = ref(null);\n  const selectRef = ref(null);\n  const selectionRef = ref(null);\n  const calculatorRef = ref(null);\n  const expanded = ref(false);\n  const selectDisabled = computed(() => props.disabled || (elForm == null ? void 0 : elForm.disabled));\n  const popupHeight = computed(() => {\n    const totalHeight = filteredOptions.value.length * 34;\n    return totalHeight > props.height ? props.height : totalHeight;\n  });\n  const hasModelValue = computed(() => {\n    return props.modelValue !== void 0 && props.modelValue !== null && props.modelValue !== \"\";\n  });\n  const showClearBtn = computed(() => {\n    const hasValue = props.multiple ? Array.isArray(props.modelValue) && props.modelValue.length > 0 : hasModelValue.value;\n    const criteria = props.clearable && !selectDisabled.value && states.comboBoxHovering && hasValue;\n    return criteria;\n  });\n  const iconComponent = computed(() => props.remote && props.filterable ? \"\" : ArrowUp);\n  const iconReverse = computed(() => iconComponent.value && nsSelectV2.is(\"reverse\", expanded.value));\n  const validateState = computed(() => (elFormItem == null ? void 0 : elFormItem.validateState) || \"\");\n  const validateIcon = computed(() => ValidateComponentsMap[validateState.value]);\n  const debounce$1 = computed(() => props.remote ? 300 : 0);\n  const emptyText = computed(() => {\n    const options = filteredOptions.value;\n\n    if (props.loading) {\n      return props.loadingText || t(\"el.select.loading\");\n    } else {\n      if (props.remote && states.inputValue === \"\" && options.length === 0) return false;\n\n      if (props.filterable && states.inputValue && options.length > 0) {\n        return props.noMatchText || t(\"el.select.noMatch\");\n      }\n\n      if (options.length === 0) {\n        return props.noDataText || t(\"el.select.noData\");\n      }\n    }\n\n    return null;\n  });\n  const filteredOptions = computed(() => {\n    const isValidOption = o => {\n      const query = states.inputValue;\n      const containsQueryString = query ? o.label.includes(query) : true;\n      return containsQueryString;\n    };\n\n    if (props.loading) {\n      return [];\n    }\n\n    return flattenOptions(props.options.concat(states.createdOptions).map(v => {\n      if (isArray(v.options)) {\n        const filtered = v.options.filter(isValidOption);\n\n        if (filtered.length > 0) {\n          return { ...v,\n            options: filtered\n          };\n        }\n      } else {\n        if (props.remote || isValidOption(v)) {\n          return v;\n        }\n      }\n\n      return null;\n    }).filter(v => v !== null));\n  });\n  const optionsAllDisabled = computed(() => filteredOptions.value.every(option => option.disabled));\n  const selectSize = useSize();\n  const collapseTagSize = computed(() => selectSize.value === \"small\" ? \"small\" : \"default\");\n  const tagMaxWidth = computed(() => {\n    const select = selectionRef.value;\n    const size = collapseTagSize.value || \"default\";\n    const paddingLeft = select ? Number.parseInt(getComputedStyle(select).paddingLeft) : 0;\n    const paddingRight = select ? Number.parseInt(getComputedStyle(select).paddingRight) : 0;\n    return states.selectWidth - paddingRight - paddingLeft - TAG_BASE_WIDTH[size];\n  });\n\n  const calculatePopperSize = () => {\n    var _a, _b, _c;\n\n    popperSize.value = ((_c = (_b = (_a = selectRef.value) == null ? void 0 : _a.getBoundingClientRect) == null ? void 0 : _b.call(_a)) == null ? void 0 : _c.width) || 200;\n  };\n\n  const inputWrapperStyle = computed(() => {\n    return {\n      width: `${states.calculatedWidth === 0 ? MINIMUM_INPUT_WIDTH : Math.ceil(states.calculatedWidth) + MINIMUM_INPUT_WIDTH}px`\n    };\n  });\n  const shouldShowPlaceholder = computed(() => {\n    if (isArray(props.modelValue)) {\n      return props.modelValue.length === 0 && !states.displayInputValue;\n    }\n\n    return props.filterable ? states.displayInputValue.length === 0 : true;\n  });\n  const currentPlaceholder = computed(() => {\n    const _placeholder = props.placeholder || t(\"el.select.placeholder\");\n\n    return props.multiple ? _placeholder : states.selectedLabel || _placeholder;\n  });\n  const popperRef = computed(() => {\n    var _a, _b;\n\n    return (_b = (_a = popper.value) == null ? void 0 : _a.popperRef) == null ? void 0 : _b.contentRef;\n  });\n  const indexRef = computed(() => {\n    if (props.multiple) {\n      const len = props.modelValue.length;\n\n      if (props.modelValue.length > 0) {\n        return filteredOptions.value.findIndex(o => o.value === props.modelValue[len - 1]);\n      }\n    } else {\n      if (props.modelValue) {\n        return filteredOptions.value.findIndex(o => o.value === props.modelValue);\n      }\n    }\n\n    return -1;\n  });\n  const dropdownMenuVisible = computed(() => {\n    return expanded.value && emptyText.value !== false;\n  });\n  const {\n    createNewOption,\n    removeNewOption,\n    selectNewOption,\n    clearAllNewOption\n  } = useAllowCreate(props, states);\n  const {\n    handleCompositionStart,\n    handleCompositionUpdate,\n    handleCompositionEnd\n  } = useInput(e => onInput(e));\n\n  const focusAndUpdatePopup = () => {\n    var _a, _b, _c;\n\n    (_b = (_a = inputRef.value).focus) == null ? void 0 : _b.call(_a);\n    (_c = popper.value) == null ? void 0 : _c.updatePopper();\n  };\n\n  const toggleMenu = () => {\n    if (props.automaticDropdown) return;\n\n    if (!selectDisabled.value) {\n      if (states.isComposing) states.softFocus = true;\n      return nextTick(() => {\n        var _a, _b;\n\n        expanded.value = !expanded.value;\n        (_b = (_a = inputRef.value) == null ? void 0 : _a.focus) == null ? void 0 : _b.call(_a);\n      });\n    }\n  };\n\n  const onInputChange = () => {\n    if (props.filterable && states.inputValue !== states.selectedLabel) {\n      states.query = states.selectedLabel;\n    }\n\n    handleQueryChange(states.inputValue);\n    return nextTick(() => {\n      createNewOption(states.inputValue);\n    });\n  };\n\n  const debouncedOnInputChange = debounce(onInputChange, debounce$1.value);\n\n  const handleQueryChange = val => {\n    if (states.previousQuery === val) {\n      return;\n    }\n\n    states.previousQuery = val;\n\n    if (props.filterable && isFunction(props.filterMethod)) {\n      props.filterMethod(val);\n    } else if (props.filterable && props.remote && isFunction(props.remoteMethod)) {\n      props.remoteMethod(val);\n    }\n  };\n\n  const emitChange = val => {\n    if (!isEqual(props.modelValue, val)) {\n      emit(CHANGE_EVENT, val);\n    }\n  };\n\n  const update = val => {\n    emit(UPDATE_MODEL_EVENT, val);\n    emitChange(val);\n    states.previousValue = val.toString();\n  };\n\n  const getValueIndex = (arr = [], value) => {\n    if (!isObject(value)) {\n      return arr.indexOf(value);\n    }\n\n    const valueKey = props.valueKey;\n    let index = -1;\n    arr.some((item, i) => {\n      if (get(item, valueKey) === get(value, valueKey)) {\n        index = i;\n        return true;\n      }\n\n      return false;\n    });\n    return index;\n  };\n\n  const getValueKey = item => {\n    return isObject(item) ? get(item, props.valueKey) : item;\n  };\n\n  const getLabel = item => {\n    return isObject(item) ? item.label : item;\n  };\n\n  const resetInputHeight = () => {\n    if (props.collapseTags && !props.filterable) {\n      return;\n    }\n\n    return nextTick(() => {\n      var _a, _b;\n\n      if (!inputRef.value) return;\n      const selection = selectionRef.value;\n      selectRef.value.height = selection.offsetHeight;\n\n      if (expanded.value && emptyText.value !== false) {\n        (_b = (_a = popper.value) == null ? void 0 : _a.updatePopper) == null ? void 0 : _b.call(_a);\n      }\n    });\n  };\n\n  const handleResize = () => {\n    var _a, _b;\n\n    resetInputWidth();\n    calculatePopperSize();\n    (_b = (_a = popper.value) == null ? void 0 : _a.updatePopper) == null ? void 0 : _b.call(_a);\n\n    if (props.multiple) {\n      return resetInputHeight();\n    }\n  };\n\n  const resetInputWidth = () => {\n    const select = selectionRef.value;\n\n    if (select) {\n      states.selectWidth = select.getBoundingClientRect().width;\n    }\n  };\n\n  const onSelect = (option, idx, byClick = true) => {\n    var _a, _b;\n\n    if (props.multiple) {\n      let selectedOptions = props.modelValue.slice();\n      const index = getValueIndex(selectedOptions, getValueKey(option));\n\n      if (index > -1) {\n        selectedOptions = [...selectedOptions.slice(0, index), ...selectedOptions.slice(index + 1)];\n        states.cachedOptions.splice(index, 1);\n        removeNewOption(option);\n      } else if (props.multipleLimit <= 0 || selectedOptions.length < props.multipleLimit) {\n        selectedOptions = [...selectedOptions, getValueKey(option)];\n        states.cachedOptions.push(option);\n        selectNewOption(option);\n        updateHoveringIndex(idx);\n      }\n\n      update(selectedOptions);\n\n      if (option.created) {\n        states.query = \"\";\n        handleQueryChange(\"\");\n        states.inputLength = 20;\n      }\n\n      if (props.filterable && !props.reserveKeyword) {\n        (_b = (_a = inputRef.value).focus) == null ? void 0 : _b.call(_a);\n        onUpdateInputValue(\"\");\n      }\n\n      if (props.filterable) {\n        states.calculatedWidth = calculatorRef.value.getBoundingClientRect().width;\n      }\n\n      resetInputHeight();\n      setSoftFocus();\n    } else {\n      selectedIndex.value = idx;\n      states.selectedLabel = option.label;\n      update(getValueKey(option));\n      expanded.value = false;\n      states.isComposing = false;\n      states.isSilentBlur = byClick;\n      selectNewOption(option);\n\n      if (!option.created) {\n        clearAllNewOption();\n      }\n\n      updateHoveringIndex(idx);\n    }\n  };\n\n  const deleteTag = (event, tag) => {\n    const {\n      valueKey\n    } = props;\n    const index = props.modelValue.indexOf(get(tag, valueKey));\n\n    if (index > -1 && !selectDisabled.value) {\n      const value = [...props.modelValue.slice(0, index), ...props.modelValue.slice(index + 1)];\n      states.cachedOptions.splice(index, 1);\n      update(value);\n      emit(\"remove-tag\", get(tag, valueKey));\n      states.softFocus = true;\n      removeNewOption(tag);\n      return nextTick(focusAndUpdatePopup);\n    }\n\n    event.stopPropagation();\n  };\n\n  const handleFocus = event => {\n    const focused = states.isComposing;\n    states.isComposing = true;\n\n    if (!states.softFocus) {\n      if (!focused) emit(\"focus\", event);\n    } else {\n      states.softFocus = false;\n    }\n  };\n\n  const handleBlur = () => {\n    states.softFocus = false;\n    return nextTick(() => {\n      var _a, _b;\n\n      (_b = (_a = inputRef.value) == null ? void 0 : _a.blur) == null ? void 0 : _b.call(_a);\n\n      if (calculatorRef.value) {\n        states.calculatedWidth = calculatorRef.value.getBoundingClientRect().width;\n      }\n\n      if (states.isSilentBlur) {\n        states.isSilentBlur = false;\n      } else {\n        if (states.isComposing) {\n          emit(\"blur\");\n        }\n      }\n\n      states.isComposing = false;\n    });\n  };\n\n  const handleEsc = () => {\n    if (states.displayInputValue.length > 0) {\n      onUpdateInputValue(\"\");\n    } else {\n      expanded.value = false;\n    }\n  };\n\n  const handleDel = e => {\n    if (states.displayInputValue.length === 0) {\n      e.preventDefault();\n      const selected = props.modelValue.slice();\n      selected.pop();\n      removeNewOption(states.cachedOptions.pop());\n      update(selected);\n    }\n  };\n\n  const handleClear = () => {\n    let emptyValue;\n\n    if (isArray(props.modelValue)) {\n      emptyValue = [];\n    } else {\n      emptyValue = \"\";\n    }\n\n    states.softFocus = true;\n\n    if (props.multiple) {\n      states.cachedOptions = [];\n    } else {\n      states.selectedLabel = \"\";\n    }\n\n    expanded.value = false;\n    update(emptyValue);\n    emit(\"clear\");\n    clearAllNewOption();\n    return nextTick(focusAndUpdatePopup);\n  };\n\n  const onUpdateInputValue = val => {\n    states.displayInputValue = val;\n    states.inputValue = val;\n  };\n\n  const onKeyboardNavigate = (direction, hoveringIndex = void 0) => {\n    const options = filteredOptions.value;\n\n    if (![\"forward\", \"backward\"].includes(direction) || selectDisabled.value || options.length <= 0 || optionsAllDisabled.value) {\n      return;\n    }\n\n    if (!expanded.value) {\n      return toggleMenu();\n    }\n\n    if (hoveringIndex === void 0) {\n      hoveringIndex = states.hoveringIndex;\n    }\n\n    let newIndex = -1;\n\n    if (direction === \"forward\") {\n      newIndex = hoveringIndex + 1;\n\n      if (newIndex >= options.length) {\n        newIndex = 0;\n      }\n    } else if (direction === \"backward\") {\n      newIndex = hoveringIndex - 1;\n\n      if (newIndex < 0) {\n        newIndex = options.length - 1;\n      }\n    }\n\n    const option = options[newIndex];\n\n    if (option.disabled || option.type === \"Group\") {\n      return onKeyboardNavigate(direction, newIndex);\n    } else {\n      updateHoveringIndex(newIndex);\n      scrollToItem(newIndex);\n    }\n  };\n\n  const onKeyboardSelect = () => {\n    if (!expanded.value) {\n      return toggleMenu();\n    } else if (~states.hoveringIndex && filteredOptions.value[states.hoveringIndex]) {\n      onSelect(filteredOptions.value[states.hoveringIndex], states.hoveringIndex, false);\n    }\n  };\n\n  const updateHoveringIndex = idx => {\n    states.hoveringIndex = idx;\n  };\n\n  const resetHoveringIndex = () => {\n    states.hoveringIndex = -1;\n  };\n\n  const setSoftFocus = () => {\n    var _a;\n\n    const _input = inputRef.value;\n\n    if (_input) {\n      (_a = _input.focus) == null ? void 0 : _a.call(_input);\n    }\n  };\n\n  const onInput = event => {\n    const value = event.target.value;\n    onUpdateInputValue(value);\n\n    if (states.displayInputValue.length > 0 && !expanded.value) {\n      expanded.value = true;\n    }\n\n    states.calculatedWidth = calculatorRef.value.getBoundingClientRect().width;\n\n    if (props.multiple) {\n      resetInputHeight();\n    }\n\n    if (props.remote) {\n      debouncedOnInputChange();\n    } else {\n      return onInputChange();\n    }\n  };\n\n  const handleClickOutside = () => {\n    expanded.value = false;\n    return handleBlur();\n  };\n\n  const handleMenuEnter = () => {\n    states.inputValue = states.displayInputValue;\n    return nextTick(() => {\n      if (~indexRef.value) {\n        updateHoveringIndex(indexRef.value);\n        scrollToItem(states.hoveringIndex);\n      }\n    });\n  };\n\n  const scrollToItem = index => {\n    menuRef.value.scrollToItem(index);\n  };\n\n  const initStates = () => {\n    resetHoveringIndex();\n\n    if (props.multiple) {\n      if (props.modelValue.length > 0) {\n        let initHovering = false;\n        states.cachedOptions.length = 0;\n        states.previousValue = props.modelValue.toString();\n        props.modelValue.forEach(selected => {\n          const itemIndex = filteredOptions.value.findIndex(option => getValueKey(option) === selected);\n\n          if (~itemIndex) {\n            states.cachedOptions.push(filteredOptions.value[itemIndex]);\n\n            if (!initHovering) {\n              updateHoveringIndex(itemIndex);\n            }\n\n            initHovering = true;\n          }\n        });\n      } else {\n        states.cachedOptions = [];\n        states.previousValue = \"\";\n      }\n    } else {\n      if (hasModelValue.value) {\n        states.previousValue = props.modelValue;\n        const options = filteredOptions.value;\n        const selectedItemIndex = options.findIndex(option => getValueKey(option) === getValueKey(props.modelValue));\n\n        if (~selectedItemIndex) {\n          states.selectedLabel = options[selectedItemIndex].label;\n          updateHoveringIndex(selectedItemIndex);\n        } else {\n          states.selectedLabel = `${props.modelValue}`;\n        }\n      } else {\n        states.selectedLabel = \"\";\n        states.previousValue = \"\";\n      }\n    }\n\n    clearAllNewOption();\n    calculatePopperSize();\n  };\n\n  watch(expanded, val => {\n    var _a, _b;\n\n    emit(\"visible-change\", val);\n\n    if (val) {\n      (_b = (_a = popper.value).update) == null ? void 0 : _b.call(_a);\n    } else {\n      states.displayInputValue = \"\";\n      states.previousQuery = null;\n      createNewOption(\"\");\n    }\n  });\n  watch(() => props.modelValue, (val, oldVal) => {\n    var _a;\n\n    if (!val || val.toString() !== states.previousValue) {\n      initStates();\n    }\n\n    if (!isEqual(val, oldVal)) {\n      (_a = elFormItem == null ? void 0 : elFormItem.validate) == null ? void 0 : _a.call(elFormItem, \"change\").catch(err => debugWarn(err));\n    }\n  }, {\n    deep: true\n  });\n  watch(() => props.options, () => {\n    const input = inputRef.value;\n\n    if (!input || input && document.activeElement !== input) {\n      initStates();\n    }\n  }, {\n    deep: true\n  });\n  watch(filteredOptions, () => {\n    return nextTick(menuRef.value.resetScrollTop);\n  });\n  onMounted(() => {\n    initStates();\n    addResizeListener(selectRef.value, handleResize);\n  });\n  onBeforeMount(() => {\n    removeResizeListener(selectRef.value, handleResize);\n  });\n  return {\n    collapseTagSize,\n    currentPlaceholder,\n    expanded,\n    emptyText,\n    popupHeight,\n    debounce: debounce$1,\n    filteredOptions,\n    iconComponent,\n    iconReverse,\n    inputWrapperStyle,\n    popperSize,\n    dropdownMenuVisible,\n    hasModelValue,\n    shouldShowPlaceholder,\n    selectDisabled,\n    selectSize,\n    showClearBtn,\n    states,\n    tagMaxWidth,\n    nsSelectV2,\n    nsInput,\n    calculatorRef,\n    controlRef,\n    inputRef,\n    menuRef,\n    popper,\n    selectRef,\n    selectionRef,\n    popperRef,\n    validateState,\n    validateIcon,\n    debouncedOnInputChange,\n    deleteTag,\n    getLabel,\n    getValueKey,\n    handleBlur,\n    handleClear,\n    handleClickOutside,\n    handleDel,\n    handleEsc,\n    handleFocus,\n    handleMenuEnter,\n    handleResize,\n    toggleMenu,\n    scrollTo: scrollToItem,\n    onInput,\n    onKeyboardNavigate,\n    onKeyboardSelect,\n    onSelect,\n    onHover: updateHoveringIndex,\n    onUpdateInputValue,\n    handleCompositionStart,\n    handleCompositionEnd,\n    handleCompositionUpdate\n  };\n};\n\nexport { useSelect as default };","map":{"version":3,"mappings":"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","names":["DEFAULT_INPUT_PLACEHOLDER","MINIMUM_INPUT_WIDTH","TAG_BASE_WIDTH","larget","default","small","useSelect","props","emit","t","useLocale","nsSelectV2","useNamespace","nsInput","form","elForm","formItem","elFormItem","useFormItem","states","reactive","inputValue","displayInputValue","calculatedWidth","cachedPlaceholder","cachedOptions","createdOptions","createdLabel","createdSelected","currentPlaceholder","hoveringIndex","comboBoxHovering","isOnComposition","isSilentBlur","isComposing","inputLength","selectWidth","initialInputHeight","previousQuery","previousValue","query","selectedLabel","softFocus","tagInMultiLine","selectedIndex","ref","popperSize","controlRef","inputRef","menuRef","popper","selectRef","selectionRef","calculatorRef","expanded","selectDisabled","computed","disabled","popupHeight","totalHeight","filteredOptions","value","length","height","hasModelValue","modelValue","showClearBtn","hasValue","multiple","Array","isArray","criteria","clearable","iconComponent","remote","filterable","ArrowUp","iconReverse","is","validateState","validateIcon","ValidateComponentsMap","debounce","emptyText","options","loading","loadingText","noMatchText","noDataText","isValidOption","o","containsQueryString","label","includes","flattenOptions","concat","map","v","filtered","filter","optionsAllDisabled","every","option","selectSize","useSize","collapseTagSize","tagMaxWidth","select","size","paddingLeft","Number","parseInt","getComputedStyle","paddingRight","calculatePopperSize","_a","_b","_c","getBoundingClientRect","call","width","inputWrapperStyle","Math","ceil","shouldShowPlaceholder","_placeholder","placeholder","popperRef","contentRef","indexRef","len","findIndex","dropdownMenuVisible","createNewOption","removeNewOption","selectNewOption","clearAllNewOption","useAllowCreate","handleCompositionStart","handleCompositionUpdate","handleCompositionEnd","useInput","e","onInput","focusAndUpdatePopup","focus","updatePopper","toggleMenu","automaticDropdown","nextTick","onInputChange","handleQueryChange","debouncedOnInputChange","lodashDebounce","val","isFunction","filterMethod","remoteMethod","emitChange","isEqual","CHANGE_EVENT","update","UPDATE_MODEL_EVENT","toString","getValueIndex","arr","isObject","indexOf","valueKey","index","some","item","i","get","getValueKey","getLabel","resetInputHeight","collapseTags","selection","offsetHeight","handleResize","resetInputWidth","onSelect","idx","byClick","selectedOptions","slice","splice","multipleLimit","push","updateHoveringIndex","created","reserveKeyword","onUpdateInputValue","setSoftFocus","deleteTag","event","tag","stopPropagation","handleFocus","focused","handleBlur","blur","handleEsc","handleDel","preventDefault","selected","pop","handleClear","emptyValue","onKeyboardNavigate","direction","newIndex","type","scrollToItem","onKeyboardSelect","resetHoveringIndex","_input","target","handleClickOutside","handleMenuEnter","initStates","initHovering","forEach","itemIndex","selectedItemIndex","watch","oldVal","validate","catch","err","debugWarn","deep","input","document","activeElement","resetScrollTop","onMounted","addResizeListener","onBeforeMount","removeResizeListener","scrollTo","onHover"],"sources":["../../../../../../packages/components/select-v2/src/useSelect.ts"],"sourcesContent":["import {\n  computed,\n  nextTick,\n  onBeforeMount,\n  onMounted,\n  reactive,\n  ref,\n  watch,\n} from 'vue'\nimport { isArray, isFunction, isObject } from '@vue/shared'\nimport { get, isEqual, debounce as lodashDebounce } from 'lodash-unified'\nimport {\n  useFormItem,\n  useLocale,\n  useNamespace,\n  useSize,\n} from '@element-plus/hooks'\nimport { CHANGE_EVENT, UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport {\n  ValidateComponentsMap,\n  addResizeListener,\n  debugWarn,\n  removeResizeListener,\n} from '@element-plus/utils'\n\nimport { ArrowUp } from '@element-plus/icons-vue'\nimport { useAllowCreate } from './useAllowCreate'\n\nimport { flattenOptions } from './util'\n\nimport { useInput } from './useInput'\nimport type ElTooltip from '@element-plus/components/tooltip'\nimport type { SelectProps } from './defaults'\nimport type { CSSProperties, ExtractPropTypes } from 'vue'\nimport type { Option, OptionType } from './select.types'\n\nconst DEFAULT_INPUT_PLACEHOLDER = ''\nconst MINIMUM_INPUT_WIDTH = 11\nconst TAG_BASE_WIDTH = {\n  larget: 51,\n  default: 42,\n  small: 33,\n}\n\nconst useSelect = (props: ExtractPropTypes<typeof SelectProps>, emit) => {\n  // inject\n  const { t } = useLocale()\n  const nsSelectV2 = useNamespace('select-v2')\n  const nsInput = useNamespace('input')\n  const { form: elForm, formItem: elFormItem } = useFormItem()\n\n  const states = reactive({\n    inputValue: DEFAULT_INPUT_PLACEHOLDER,\n    displayInputValue: DEFAULT_INPUT_PLACEHOLDER,\n    calculatedWidth: 0,\n    cachedPlaceholder: '',\n    cachedOptions: [] as Option[],\n    createdOptions: [] as Option[],\n    createdLabel: '',\n    createdSelected: false,\n    currentPlaceholder: '',\n    hoveringIndex: -1,\n    comboBoxHovering: false,\n    isOnComposition: false,\n    isSilentBlur: false,\n    isComposing: false,\n    inputLength: 20,\n    selectWidth: 200,\n    initialInputHeight: 0,\n    previousQuery: null,\n    previousValue: '',\n    query: '',\n    selectedLabel: '',\n    softFocus: false,\n    tagInMultiLine: false,\n  })\n\n  // data refs\n  const selectedIndex = ref(-1)\n  const popperSize = ref(-1)\n\n  // DOM & Component refs\n  const controlRef = ref(null)\n  const inputRef = ref(null) // el-input ref\n  const menuRef = ref(null)\n  const popper = ref<InstanceType<typeof ElTooltip> | null>(null)\n  const selectRef = ref(null)\n  const selectionRef = ref(null) // tags ref\n  const calculatorRef = ref<HTMLElement>(null)\n\n  // the controller of the expanded popup\n  const expanded = ref(false)\n\n  const selectDisabled = computed(() => props.disabled || elForm?.disabled)\n\n  const popupHeight = computed(() => {\n    const totalHeight = filteredOptions.value.length * 34\n    return totalHeight > props.height ? props.height : totalHeight\n  })\n\n  const hasModelValue = computed(() => {\n    return (\n      props.modelValue !== undefined &&\n      props.modelValue !== null &&\n      props.modelValue !== ''\n    )\n  })\n\n  const showClearBtn = computed(() => {\n    const hasValue = props.multiple\n      ? Array.isArray(props.modelValue) && props.modelValue.length > 0\n      : hasModelValue.value\n\n    const criteria =\n      props.clearable &&\n      !selectDisabled.value &&\n      states.comboBoxHovering &&\n      hasValue\n    return criteria\n  })\n\n  const iconComponent = computed(() =>\n    props.remote && props.filterable ? '' : ArrowUp\n  )\n\n  const iconReverse = computed(\n    () => iconComponent.value && nsSelectV2.is('reverse', expanded.value)\n  )\n\n  const validateState = computed(() => elFormItem?.validateState || '')\n  const validateIcon = computed(\n    () => ValidateComponentsMap[validateState.value]\n  )\n\n  const debounce = computed(() => (props.remote ? 300 : 0))\n\n  // filteredOptions includes flatten the data into one dimensional array.\n  const emptyText = computed(() => {\n    const options = filteredOptions.value\n    if (props.loading) {\n      return props.loadingText || t('el.select.loading')\n    } else {\n      if (props.remote && states.inputValue === '' && options.length === 0)\n        return false\n      if (props.filterable && states.inputValue && options.length > 0) {\n        return props.noMatchText || t('el.select.noMatch')\n      }\n      if (options.length === 0) {\n        return props.noDataText || t('el.select.noData')\n      }\n    }\n    return null\n  })\n\n  const filteredOptions = computed(() => {\n    const isValidOption = (o: Option): boolean => {\n      // fill the conditions here.\n      const query = states.inputValue\n      // when query was given, we should test on the label see whether the label contains the given query\n      const containsQueryString = query ? o.label.includes(query) : true\n      return containsQueryString\n    }\n    if (props.loading) {\n      return []\n    }\n    return flattenOptions(\n      (props.options as OptionType[])\n        .concat(states.createdOptions)\n        .map((v) => {\n          if (isArray(v.options)) {\n            const filtered = v.options.filter(isValidOption)\n            if (filtered.length > 0) {\n              return {\n                ...v,\n                options: filtered,\n              }\n            }\n          } else {\n            if (props.remote || isValidOption(v as Option)) {\n              return v\n            }\n          }\n          return null\n        })\n        .filter((v) => v !== null)\n    )\n  })\n\n  const optionsAllDisabled = computed(() =>\n    filteredOptions.value.every((option) => option.disabled)\n  )\n\n  const selectSize = useSize()\n\n  const collapseTagSize = computed(() =>\n    'small' === selectSize.value ? 'small' : 'default'\n  )\n\n  const tagMaxWidth = computed(() => {\n    const select = selectionRef.value\n    const size = collapseTagSize.value || 'default'\n    const paddingLeft = select\n      ? Number.parseInt(getComputedStyle(select).paddingLeft)\n      : 0\n    const paddingRight = select\n      ? Number.parseInt(getComputedStyle(select).paddingRight)\n      : 0\n    return (\n      states.selectWidth - paddingRight - paddingLeft - TAG_BASE_WIDTH[size]\n    )\n  })\n\n  const calculatePopperSize = () => {\n    popperSize.value = selectRef.value?.getBoundingClientRect?.()?.width || 200\n  }\n\n  const inputWrapperStyle = computed(() => {\n    return {\n      width: `${\n        states.calculatedWidth === 0\n          ? MINIMUM_INPUT_WIDTH\n          : Math.ceil(states.calculatedWidth) + MINIMUM_INPUT_WIDTH\n      }px`,\n    } as CSSProperties\n  })\n\n  const shouldShowPlaceholder = computed(() => {\n    if (isArray(props.modelValue)) {\n      return props.modelValue.length === 0 && !states.displayInputValue\n    }\n\n    // when it's not multiple mode, we only determine this flag based on filterable and expanded\n    // when filterable flag is true, which means we have input box on the screen\n    return props.filterable ? states.displayInputValue.length === 0 : true\n  })\n\n  const currentPlaceholder = computed(() => {\n    const _placeholder = props.placeholder || t('el.select.placeholder')\n    return props.multiple ? _placeholder : states.selectedLabel || _placeholder\n  })\n\n  // this obtains the actual popper DOM element.\n  const popperRef = computed(() => popper.value?.popperRef?.contentRef)\n\n  // the index with current value in options\n  const indexRef = computed<number>(() => {\n    if (props.multiple) {\n      const len = (props.modelValue as []).length\n      if ((props.modelValue as Array<any>).length > 0) {\n        return filteredOptions.value.findIndex(\n          (o) => o.value === props.modelValue[len - 1]\n        )\n      }\n    } else {\n      if (props.modelValue) {\n        return filteredOptions.value.findIndex(\n          (o) => o.value === props.modelValue\n        )\n      }\n    }\n    return -1\n  })\n\n  const dropdownMenuVisible = computed(() => {\n    return expanded.value && emptyText.value !== false\n  })\n\n  // hooks\n  const {\n    createNewOption,\n    removeNewOption,\n    selectNewOption,\n    clearAllNewOption,\n  } = useAllowCreate(props, states)\n  const {\n    handleCompositionStart,\n    handleCompositionUpdate,\n    handleCompositionEnd,\n  } = useInput((e) => onInput(e))\n\n  // methods\n  const focusAndUpdatePopup = () => {\n    inputRef.value.focus?.()\n    popper.value?.updatePopper()\n  }\n\n  const toggleMenu = () => {\n    if (props.automaticDropdown) return\n    if (!selectDisabled.value) {\n      if (states.isComposing) states.softFocus = true\n      return nextTick(() => {\n        expanded.value = !expanded.value\n        inputRef.value?.focus?.()\n      })\n    }\n  }\n\n  const onInputChange = () => {\n    if (props.filterable && states.inputValue !== states.selectedLabel) {\n      states.query = states.selectedLabel\n    }\n    handleQueryChange(states.inputValue)\n    return nextTick(() => {\n      createNewOption(states.inputValue)\n    })\n  }\n\n  const debouncedOnInputChange = lodashDebounce(onInputChange, debounce.value)\n\n  const handleQueryChange = (val: string) => {\n    if (states.previousQuery === val) {\n      return\n    }\n    states.previousQuery = val\n    if (props.filterable && isFunction(props.filterMethod)) {\n      props.filterMethod(val)\n    } else if (\n      props.filterable &&\n      props.remote &&\n      isFunction(props.remoteMethod)\n    ) {\n      props.remoteMethod(val)\n    }\n  }\n\n  const emitChange = (val: any | any[]) => {\n    if (!isEqual(props.modelValue, val)) {\n      emit(CHANGE_EVENT, val)\n    }\n  }\n\n  const update = (val: any) => {\n    emit(UPDATE_MODEL_EVENT, val)\n    emitChange(val)\n    states.previousValue = val.toString()\n  }\n\n  const getValueIndex = (arr = [], value: unknown) => {\n    if (!isObject(value)) {\n      return arr.indexOf(value)\n    }\n    const valueKey = props.valueKey\n    let index = -1\n    arr.some((item, i) => {\n      if (get(item, valueKey) === get(value, valueKey)) {\n        index = i\n        return true\n      }\n      return false\n    })\n    return index\n  }\n\n  const getValueKey = (item: unknown) => {\n    return isObject(item) ? get(item, props.valueKey) : item\n  }\n\n  // if the selected item is item then we get label via indexing\n  // otherwise it should be string we simply return the item itself.\n  const getLabel = (item: unknown) => {\n    return isObject(item) ? item.label : item\n  }\n\n  const resetInputHeight = () => {\n    if (props.collapseTags && !props.filterable) {\n      return\n    }\n    return nextTick(() => {\n      if (!inputRef.value) return\n      const selection = selectionRef.value\n\n      selectRef.value.height = selection.offsetHeight\n      if (expanded.value && emptyText.value !== false) {\n        popper.value?.updatePopper?.()\n      }\n    })\n  }\n\n  const handleResize = () => {\n    resetInputWidth()\n    calculatePopperSize()\n    popper.value?.updatePopper?.()\n    if (props.multiple) {\n      return resetInputHeight()\n    }\n  }\n\n  const resetInputWidth = () => {\n    const select = selectionRef.value\n    if (select) {\n      states.selectWidth = select.getBoundingClientRect().width\n    }\n  }\n\n  const onSelect = (option: Option, idx: number, byClick = true) => {\n    if (props.multiple) {\n      let selectedOptions = (props.modelValue as any[]).slice()\n\n      const index = getValueIndex(selectedOptions, getValueKey(option))\n      if (index > -1) {\n        selectedOptions = [\n          ...selectedOptions.slice(0, index),\n          ...selectedOptions.slice(index + 1),\n        ]\n        states.cachedOptions.splice(index, 1)\n        removeNewOption(option)\n      } else if (\n        props.multipleLimit <= 0 ||\n        selectedOptions.length < props.multipleLimit\n      ) {\n        selectedOptions = [...selectedOptions, getValueKey(option)]\n        states.cachedOptions.push(option)\n        selectNewOption(option)\n        updateHoveringIndex(idx)\n      }\n      update(selectedOptions)\n      if (option.created) {\n        states.query = ''\n        handleQueryChange('')\n        states.inputLength = 20\n      }\n      if (props.filterable && !props.reserveKeyword) {\n        inputRef.value.focus?.()\n        onUpdateInputValue('')\n      }\n      if (props.filterable) {\n        states.calculatedWidth =\n          calculatorRef.value.getBoundingClientRect().width\n      }\n      resetInputHeight()\n      setSoftFocus()\n    } else {\n      selectedIndex.value = idx\n      states.selectedLabel = option.label\n      update(getValueKey(option))\n      expanded.value = false\n      states.isComposing = false\n      states.isSilentBlur = byClick\n      selectNewOption(option)\n      if (!option.created) {\n        clearAllNewOption()\n      }\n      updateHoveringIndex(idx)\n    }\n  }\n\n  const deleteTag = (event: MouseEvent, tag: Option) => {\n    const { valueKey } = props\n    const index = (props.modelValue as Array<any>).indexOf(get(tag, valueKey))\n\n    if (index > -1 && !selectDisabled.value) {\n      const value = [\n        ...(props.modelValue as Array<unknown>).slice(0, index),\n        ...(props.modelValue as Array<unknown>).slice(index + 1),\n      ]\n      states.cachedOptions.splice(index, 1)\n      update(value)\n      emit('remove-tag', get(tag, valueKey))\n      states.softFocus = true\n      removeNewOption(tag)\n      return nextTick(focusAndUpdatePopup)\n    }\n    event.stopPropagation()\n  }\n\n  const handleFocus = (event: FocusEvent) => {\n    const focused = states.isComposing\n    states.isComposing = true\n    if (!states.softFocus) {\n      // If already in the focus state, shouldn't trigger event\n      if (!focused) emit('focus', event)\n    } else {\n      states.softFocus = false\n    }\n  }\n\n  const handleBlur = () => {\n    states.softFocus = false\n\n    // reset input value when blurred\n    // https://github.com/ElemeFE/element/pull/10822\n    return nextTick(() => {\n      inputRef.value?.blur?.()\n      if (calculatorRef.value) {\n        states.calculatedWidth =\n          calculatorRef.value.getBoundingClientRect().width\n      }\n      if (states.isSilentBlur) {\n        states.isSilentBlur = false\n      } else {\n        if (states.isComposing) {\n          emit('blur')\n        }\n      }\n      states.isComposing = false\n    })\n  }\n\n  // keyboard handlers\n  const handleEsc = () => {\n    if (states.displayInputValue.length > 0) {\n      onUpdateInputValue('')\n    } else {\n      expanded.value = false\n    }\n  }\n\n  const handleDel = (e: KeyboardEvent) => {\n    if (states.displayInputValue.length === 0) {\n      e.preventDefault()\n      const selected = (props.modelValue as Array<any>).slice()\n      selected.pop()\n      removeNewOption(states.cachedOptions.pop())\n      update(selected)\n    }\n  }\n\n  const handleClear = () => {\n    let emptyValue: string | any[]\n    if (isArray(props.modelValue)) {\n      emptyValue = []\n    } else {\n      emptyValue = ''\n    }\n\n    states.softFocus = true\n    if (props.multiple) {\n      states.cachedOptions = []\n    } else {\n      states.selectedLabel = ''\n    }\n    expanded.value = false\n    update(emptyValue)\n    emit('clear')\n    clearAllNewOption()\n    return nextTick(focusAndUpdatePopup)\n  }\n\n  const onUpdateInputValue = (val: string) => {\n    states.displayInputValue = val\n    states.inputValue = val\n  }\n\n  const onKeyboardNavigate = (\n    direction: 'forward' | 'backward',\n    hoveringIndex: number = undefined\n  ) => {\n    const options = filteredOptions.value\n    if (\n      !['forward', 'backward'].includes(direction) ||\n      selectDisabled.value ||\n      options.length <= 0 ||\n      optionsAllDisabled.value\n    ) {\n      return\n    }\n    if (!expanded.value) {\n      return toggleMenu()\n    }\n    if (hoveringIndex === undefined) {\n      hoveringIndex = states.hoveringIndex\n    }\n    let newIndex = -1\n    if (direction === 'forward') {\n      newIndex = hoveringIndex + 1\n      if (newIndex >= options.length) {\n        // return to the first option\n        newIndex = 0\n      }\n    } else if (direction === 'backward') {\n      newIndex = hoveringIndex - 1\n      if (newIndex < 0) {\n        // navigate to the last one\n        newIndex = options.length - 1\n      }\n    }\n    const option = options[newIndex]\n    if (option.disabled || option.type === 'Group') {\n      // prevent dispatching multiple nextTick callbacks.\n      return onKeyboardNavigate(direction, newIndex)\n    } else {\n      updateHoveringIndex(newIndex)\n      scrollToItem(newIndex)\n    }\n  }\n\n  const onKeyboardSelect = () => {\n    if (!expanded.value) {\n      return toggleMenu()\n    } else if (\n      ~states.hoveringIndex &&\n      filteredOptions.value[states.hoveringIndex]\n    ) {\n      onSelect(\n        filteredOptions.value[states.hoveringIndex],\n        states.hoveringIndex,\n        false\n      )\n    }\n  }\n\n  const updateHoveringIndex = (idx: number) => {\n    states.hoveringIndex = idx\n  }\n\n  const resetHoveringIndex = () => {\n    states.hoveringIndex = -1\n  }\n\n  const setSoftFocus = () => {\n    const _input = inputRef.value\n    if (_input) {\n      _input.focus?.()\n    }\n  }\n\n  const onInput = (event) => {\n    const value = event.target.value\n    onUpdateInputValue(value)\n    if (states.displayInputValue.length > 0 && !expanded.value) {\n      expanded.value = true\n    }\n\n    states.calculatedWidth = calculatorRef.value.getBoundingClientRect().width\n    if (props.multiple) {\n      resetInputHeight()\n    }\n    if (props.remote) {\n      debouncedOnInputChange()\n    } else {\n      return onInputChange()\n    }\n  }\n\n  const handleClickOutside = () => {\n    expanded.value = false\n    return handleBlur()\n  }\n\n  const handleMenuEnter = () => {\n    states.inputValue = states.displayInputValue\n    return nextTick(() => {\n      if (~indexRef.value) {\n        updateHoveringIndex(indexRef.value)\n        scrollToItem(states.hoveringIndex)\n      }\n    })\n  }\n\n  const scrollToItem = (index: number) => {\n    menuRef.value.scrollToItem(index)\n  }\n\n  const initStates = () => {\n    resetHoveringIndex()\n    if (props.multiple) {\n      if ((props.modelValue as Array<any>).length > 0) {\n        let initHovering = false\n        states.cachedOptions.length = 0\n        states.previousValue = props.modelValue.toString()\n        ;(props.modelValue as Array<any>).forEach((selected) => {\n          const itemIndex = filteredOptions.value.findIndex(\n            (option) => getValueKey(option) === selected\n          )\n          if (~itemIndex) {\n            states.cachedOptions.push(\n              filteredOptions.value[itemIndex] as Option\n            )\n            if (!initHovering) {\n              updateHoveringIndex(itemIndex)\n            }\n            initHovering = true\n          }\n        })\n      } else {\n        states.cachedOptions = []\n        states.previousValue = ''\n      }\n    } else {\n      if (hasModelValue.value) {\n        states.previousValue = props.modelValue\n        const options = filteredOptions.value\n        const selectedItemIndex = options.findIndex(\n          (option) => getValueKey(option) === getValueKey(props.modelValue)\n        )\n        if (~selectedItemIndex) {\n          states.selectedLabel = options[selectedItemIndex].label\n          updateHoveringIndex(selectedItemIndex)\n        } else {\n          states.selectedLabel = `${props.modelValue}`\n        }\n      } else {\n        states.selectedLabel = ''\n        states.previousValue = ''\n      }\n    }\n    clearAllNewOption()\n    calculatePopperSize()\n  }\n\n  // in order to track these individually, we need to turn them into refs instead of watching the entire\n  // reactive object which could cause perf penalty when unnecessary field gets changed the watch method will\n  // be invoked.\n\n  watch(expanded, (val) => {\n    emit('visible-change', val)\n    if (val) {\n      popper.value.update?.()\n      // the purpose of this function is to differ the blur event trigger mechanism\n    } else {\n      states.displayInputValue = ''\n      states.previousQuery = null\n      createNewOption('')\n    }\n  })\n\n  watch(\n    () => props.modelValue,\n    (val, oldVal) => {\n      if (!val || val.toString() !== states.previousValue) {\n        initStates()\n      }\n      if (!isEqual(val, oldVal)) {\n        elFormItem?.validate?.('change').catch((err) => debugWarn(err))\n      }\n    },\n    {\n      deep: true,\n    }\n  )\n\n  watch(\n    () => props.options,\n    () => {\n      const input = inputRef.value\n      // filter or remote-search scenarios are not initialized\n      if (!input || (input && document.activeElement !== input)) {\n        initStates()\n      }\n    },\n    {\n      deep: true,\n    }\n  )\n\n  // fix the problem that scrollTop is not reset in filterable mode\n  watch(filteredOptions, () => {\n    return nextTick(menuRef.value.resetScrollTop)\n  })\n\n  onMounted(() => {\n    initStates()\n    addResizeListener(selectRef.value, handleResize)\n  })\n\n  onBeforeMount(() => {\n    removeResizeListener(selectRef.value, handleResize)\n  })\n\n  return {\n    // data exports\n    collapseTagSize,\n    currentPlaceholder,\n    expanded,\n    emptyText,\n    popupHeight,\n    debounce,\n    filteredOptions,\n    iconComponent,\n    iconReverse,\n    inputWrapperStyle,\n    popperSize,\n    dropdownMenuVisible,\n    hasModelValue,\n    // readonly,\n    shouldShowPlaceholder,\n    selectDisabled,\n    selectSize,\n    showClearBtn,\n    states,\n    tagMaxWidth,\n    nsSelectV2,\n    nsInput,\n\n    // refs items exports\n    calculatorRef,\n    controlRef,\n    inputRef,\n    menuRef,\n    popper,\n    selectRef,\n    selectionRef,\n\n    popperRef,\n\n    validateState,\n    validateIcon,\n\n    // methods exports\n    debouncedOnInputChange,\n    deleteTag,\n    getLabel,\n    getValueKey,\n    handleBlur,\n    handleClear,\n    handleClickOutside,\n    handleDel,\n    handleEsc,\n    handleFocus,\n    handleMenuEnter,\n    handleResize,\n    toggleMenu,\n    scrollTo: scrollToItem,\n    onInput,\n    onKeyboardNavigate,\n    onKeyboardSelect,\n    onSelect,\n    onHover: updateHoveringIndex,\n    onUpdateInputValue,\n    handleCompositionStart,\n    handleCompositionEnd,\n    handleCompositionUpdate,\n  }\n}\n\nexport default useSelect\n"]},"metadata":{},"sourceType":"module"}