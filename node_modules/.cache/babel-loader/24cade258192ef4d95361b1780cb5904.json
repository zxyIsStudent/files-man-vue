{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport { defineComponent, computed, ref, inject, resolveComponent, openBlock, createElementBlock, normalizeClass, createElementVNode, toDisplayString, createVNode, createCommentVNode } from 'vue';\nimport dayjs from 'dayjs';\nimport { union } from 'lodash-unified';\nimport '../../../../hooks/index2.mjs';\nimport '../../../../constants/index2.mjs';\nimport TimeSpinner from './basic-time-spinner2.mjs';\nimport { useOldValue, getAvailableArrs } from './useTimePicker2.mjs';\nimport _export_sfc from '../../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useLocale } from '../../../../hooks/use-locale/index2.mjs';\nimport { useNamespace } from '../../../../hooks/use-namespace/index2.mjs';\nimport { EVENT_CODE } from '../../../../constants/aria2.mjs';\n\nconst makeSelectRange = (start, end) => {\n  const result = [];\n\n  for (let i = start; i <= end; i++) {\n    result.push(i);\n  }\n\n  return result;\n};\n\nconst _sfc_main = defineComponent({\n  components: {\n    TimeSpinner\n  },\n  props: {\n    visible: Boolean,\n    actualVisible: Boolean,\n    parsedValue: {\n      type: [Array]\n    },\n    format: {\n      type: String,\n      default: \"\"\n    }\n  },\n  emits: [\"pick\", \"select-range\", \"set-picker-option\"],\n\n  setup(props, ctx) {\n    const {\n      t,\n      lang\n    } = useLocale();\n    const nsTime = useNamespace(\"time\");\n    const nsPicker = useNamespace(\"picker\");\n    const minDate = computed(() => props.parsedValue[0]);\n    const maxDate = computed(() => props.parsedValue[1]);\n    const oldValue = useOldValue(props);\n\n    const handleCancel = () => {\n      ctx.emit(\"pick\", oldValue.value, false);\n    };\n\n    const showSeconds = computed(() => {\n      return props.format.includes(\"ss\");\n    });\n    const amPmMode = computed(() => {\n      if (props.format.includes(\"A\")) return \"A\";\n      if (props.format.includes(\"a\")) return \"a\";\n      return \"\";\n    });\n    const minSelectableRange = ref([]);\n    const maxSelectableRange = ref([]);\n\n    const handleConfirm = (visible = false) => {\n      ctx.emit(\"pick\", [minDate.value, maxDate.value], visible);\n    };\n\n    const handleMinChange = date => {\n      handleChange(date.millisecond(0), maxDate.value);\n    };\n\n    const handleMaxChange = date => {\n      handleChange(minDate.value, date.millisecond(0));\n    };\n\n    const isValidValue = _date => {\n      const parsedDate = _date.map(_ => dayjs(_).locale(lang.value));\n\n      const result = getRangeAvailableTime(parsedDate);\n      return parsedDate[0].isSame(result[0]) && parsedDate[1].isSame(result[1]);\n    };\n\n    const handleChange = (_minDate, _maxDate) => {\n      ctx.emit(\"pick\", [_minDate, _maxDate], true);\n    };\n\n    const btnConfirmDisabled = computed(() => {\n      return minDate.value > maxDate.value;\n    });\n    const selectionRange = ref([0, 2]);\n\n    const setMinSelectionRange = (start, end) => {\n      ctx.emit(\"select-range\", start, end, \"min\");\n      selectionRange.value = [start, end];\n    };\n\n    const offset = computed(() => showSeconds.value ? 11 : 8);\n\n    const setMaxSelectionRange = (start, end) => {\n      ctx.emit(\"select-range\", start, end, \"max\");\n      selectionRange.value = [start + offset.value, end + offset.value];\n    };\n\n    const changeSelectionRange = step => {\n      const list = showSeconds.value ? [0, 3, 6, 11, 14, 17] : [0, 3, 8, 11];\n      const mapping = [\"hours\", \"minutes\"].concat(showSeconds.value ? [\"seconds\"] : []);\n      const index = list.indexOf(selectionRange.value[0]);\n      const next = (index + step + list.length) % list.length;\n      const half = list.length / 2;\n\n      if (next < half) {\n        timePickerOptions[\"start_emitSelectRange\"](mapping[next]);\n      } else {\n        timePickerOptions[\"end_emitSelectRange\"](mapping[next - half]);\n      }\n    };\n\n    const handleKeydown = event => {\n      const code = event.code;\n\n      if (code === EVENT_CODE.left || code === EVENT_CODE.right) {\n        const step = code === EVENT_CODE.left ? -1 : 1;\n        changeSelectionRange(step);\n        event.preventDefault();\n        return;\n      }\n\n      if (code === EVENT_CODE.up || code === EVENT_CODE.down) {\n        const step = code === EVENT_CODE.up ? -1 : 1;\n        const role = selectionRange.value[0] < offset.value ? \"start\" : \"end\";\n        timePickerOptions[`${role}_scrollDown`](step);\n        event.preventDefault();\n        return;\n      }\n    };\n\n    const disabledHours_ = (role, compare) => {\n      const defaultDisable = disabledHours ? disabledHours(role) : [];\n      const isStart = role === \"start\";\n      const compareDate = compare || (isStart ? maxDate.value : minDate.value);\n      const compareHour = compareDate.hour();\n      const nextDisable = isStart ? makeSelectRange(compareHour + 1, 23) : makeSelectRange(0, compareHour - 1);\n      return union(defaultDisable, nextDisable);\n    };\n\n    const disabledMinutes_ = (hour, role, compare) => {\n      const defaultDisable = disabledMinutes ? disabledMinutes(hour, role) : [];\n      const isStart = role === \"start\";\n      const compareDate = compare || (isStart ? maxDate.value : minDate.value);\n      const compareHour = compareDate.hour();\n\n      if (hour !== compareHour) {\n        return defaultDisable;\n      }\n\n      const compareMinute = compareDate.minute();\n      const nextDisable = isStart ? makeSelectRange(compareMinute + 1, 59) : makeSelectRange(0, compareMinute - 1);\n      return union(defaultDisable, nextDisable);\n    };\n\n    const disabledSeconds_ = (hour, minute, role, compare) => {\n      const defaultDisable = disabledSeconds ? disabledSeconds(hour, minute, role) : [];\n      const isStart = role === \"start\";\n      const compareDate = compare || (isStart ? maxDate.value : minDate.value);\n      const compareHour = compareDate.hour();\n      const compareMinute = compareDate.minute();\n\n      if (hour !== compareHour || minute !== compareMinute) {\n        return defaultDisable;\n      }\n\n      const compareSecond = compareDate.second();\n      const nextDisable = isStart ? makeSelectRange(compareSecond + 1, 59) : makeSelectRange(0, compareSecond - 1);\n      return union(defaultDisable, nextDisable);\n    };\n\n    const getRangeAvailableTime = dates => {\n      return dates.map((_, index) => getRangeAvailableTimeEach(dates[0], dates[1], index === 0 ? \"start\" : \"end\"));\n    };\n\n    const {\n      getAvailableHours,\n      getAvailableMinutes,\n      getAvailableSeconds\n    } = getAvailableArrs(disabledHours_, disabledMinutes_, disabledSeconds_);\n\n    const getRangeAvailableTimeEach = (startDate, endDate, role) => {\n      const availableMap = {\n        hour: getAvailableHours,\n        minute: getAvailableMinutes,\n        second: getAvailableSeconds\n      };\n      const isStart = role === \"start\";\n      let result = isStart ? startDate : endDate;\n      const compareDate = isStart ? endDate : startDate;\n      [\"hour\", \"minute\", \"second\"].forEach(_ => {\n        if (availableMap[_]) {\n          let availableArr;\n          const method = availableMap[_];\n\n          if (_ === \"minute\") {\n            availableArr = method(result.hour(), role, compareDate);\n          } else if (_ === \"second\") {\n            availableArr = method(result.hour(), result.minute(), role, compareDate);\n          } else {\n            availableArr = method(role, compareDate);\n          }\n\n          if (availableArr && availableArr.length && !availableArr.includes(result[_]())) {\n            const pos = isStart ? 0 : availableArr.length - 1;\n            result = result[_](availableArr[pos]);\n          }\n        }\n      });\n      return result;\n    };\n\n    const parseUserInput = value => {\n      if (!value) return null;\n\n      if (Array.isArray(value)) {\n        return value.map(_ => dayjs(_, props.format).locale(lang.value));\n      }\n\n      return dayjs(value, props.format).locale(lang.value);\n    };\n\n    const formatToString = value => {\n      if (!value) return null;\n\n      if (Array.isArray(value)) {\n        return value.map(_ => _.format(props.format));\n      }\n\n      return value.format(props.format);\n    };\n\n    const getDefaultValue = () => {\n      if (Array.isArray(defaultValue)) {\n        return defaultValue.map(_ => dayjs(_).locale(lang.value));\n      }\n\n      const defaultDay = dayjs(defaultValue).locale(lang.value);\n      return [defaultDay, defaultDay.add(60, \"m\")];\n    };\n\n    ctx.emit(\"set-picker-option\", [\"formatToString\", formatToString]);\n    ctx.emit(\"set-picker-option\", [\"parseUserInput\", parseUserInput]);\n    ctx.emit(\"set-picker-option\", [\"isValidValue\", isValidValue]);\n    ctx.emit(\"set-picker-option\", [\"handleKeydownInput\", handleKeydown]);\n    ctx.emit(\"set-picker-option\", [\"getDefaultValue\", getDefaultValue]);\n    ctx.emit(\"set-picker-option\", [\"getRangeAvailableTime\", getRangeAvailableTime]);\n    const timePickerOptions = {};\n\n    const onSetOption = e => {\n      timePickerOptions[e[0]] = e[1];\n    };\n\n    const pickerBase = inject(\"EP_PICKER_BASE\");\n    const {\n      arrowControl,\n      disabledHours,\n      disabledMinutes,\n      disabledSeconds,\n      defaultValue\n    } = pickerBase.props;\n    return {\n      nsTime,\n      nsPicker,\n      arrowControl,\n      onSetOption,\n      setMaxSelectionRange,\n      setMinSelectionRange,\n      btnConfirmDisabled,\n      handleCancel,\n      handleConfirm,\n      t,\n      showSeconds,\n      minDate,\n      maxDate,\n      amPmMode,\n      handleMinChange,\n      handleMaxChange,\n      minSelectableRange,\n      maxSelectableRange,\n      disabledHours_,\n      disabledMinutes_,\n      disabledSeconds_\n    };\n  }\n\n});\n\nconst _hoisted_1 = [\"disabled\"];\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_time_spinner = resolveComponent(\"time-spinner\");\n\n  return _ctx.actualVisible ? (openBlock(), createElementBlock(\"div\", {\n    key: 0,\n    class: normalizeClass([_ctx.nsTime.b(\"range-picker\"), _ctx.nsPicker.b(\"panel\")])\n  }, [createElementVNode(\"div\", {\n    class: normalizeClass(_ctx.nsTime.be(\"range-picker\", \"content\"))\n  }, [createElementVNode(\"div\", {\n    class: normalizeClass(_ctx.nsTime.be(\"range-picker\", \"cell\"))\n  }, [createElementVNode(\"div\", {\n    class: normalizeClass(_ctx.nsTime.be(\"range-picker\", \"header\"))\n  }, toDisplayString(_ctx.t(\"el.datepicker.startTime\")), 3), createElementVNode(\"div\", {\n    class: normalizeClass([_ctx.nsTime.be(\"range-picker\", \"body\"), _ctx.nsTime.be(\"panel\", \"content\"), _ctx.nsTime.is(\"arrow\", _ctx.arrowControl), {\n      \"has-seconds\": _ctx.showSeconds\n    }])\n  }, [createVNode(_component_time_spinner, {\n    ref: \"minSpinner\",\n    role: \"start\",\n    \"show-seconds\": _ctx.showSeconds,\n    \"am-pm-mode\": _ctx.amPmMode,\n    \"arrow-control\": _ctx.arrowControl,\n    \"spinner-date\": _ctx.minDate,\n    \"disabled-hours\": _ctx.disabledHours_,\n    \"disabled-minutes\": _ctx.disabledMinutes_,\n    \"disabled-seconds\": _ctx.disabledSeconds_,\n    onChange: _ctx.handleMinChange,\n    onSetOption: _ctx.onSetOption,\n    onSelectRange: _ctx.setMinSelectionRange\n  }, null, 8, [\"show-seconds\", \"am-pm-mode\", \"arrow-control\", \"spinner-date\", \"disabled-hours\", \"disabled-minutes\", \"disabled-seconds\", \"onChange\", \"onSetOption\", \"onSelectRange\"])], 2)], 2), createElementVNode(\"div\", {\n    class: normalizeClass(_ctx.nsTime.be(\"range-picker\", \"cell\"))\n  }, [createElementVNode(\"div\", {\n    class: normalizeClass(_ctx.nsTime.be(\"range-picker\", \"header\"))\n  }, toDisplayString(_ctx.t(\"el.datepicker.endTime\")), 3), createElementVNode(\"div\", {\n    class: normalizeClass([_ctx.nsTime.be(\"range-picker\", \"body\"), _ctx.nsTime.be(\"panel\", \"content\"), _ctx.nsTime.is(\"arrow\", _ctx.arrowControl), {\n      \"has-seconds\": _ctx.showSeconds\n    }])\n  }, [createVNode(_component_time_spinner, {\n    ref: \"maxSpinner\",\n    role: \"end\",\n    \"show-seconds\": _ctx.showSeconds,\n    \"am-pm-mode\": _ctx.amPmMode,\n    \"arrow-control\": _ctx.arrowControl,\n    \"spinner-date\": _ctx.maxDate,\n    \"disabled-hours\": _ctx.disabledHours_,\n    \"disabled-minutes\": _ctx.disabledMinutes_,\n    \"disabled-seconds\": _ctx.disabledSeconds_,\n    onChange: _ctx.handleMaxChange,\n    onSetOption: _ctx.onSetOption,\n    onSelectRange: _ctx.setMaxSelectionRange\n  }, null, 8, [\"show-seconds\", \"am-pm-mode\", \"arrow-control\", \"spinner-date\", \"disabled-hours\", \"disabled-minutes\", \"disabled-seconds\", \"onChange\", \"onSetOption\", \"onSelectRange\"])], 2)], 2)], 2), createElementVNode(\"div\", {\n    class: normalizeClass(_ctx.nsTime.be(\"panel\", \"footer\"))\n  }, [createElementVNode(\"button\", {\n    type: \"button\",\n    class: normalizeClass([_ctx.nsTime.be(\"panel\", \"btn\"), \"cancel\"]),\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.handleCancel())\n  }, toDisplayString(_ctx.t(\"el.datepicker.cancel\")), 3), createElementVNode(\"button\", {\n    type: \"button\",\n    class: normalizeClass([_ctx.nsTime.be(\"panel\", \"btn\"), \"confirm\"]),\n    disabled: _ctx.btnConfirmDisabled,\n    onClick: _cache[1] || (_cache[1] = $event => _ctx.handleConfirm())\n  }, toDisplayString(_ctx.t(\"el.datepicker.confirm\")), 11, _hoisted_1)], 2)], 2)) : createCommentVNode(\"v-if\", true);\n}\n\nvar TimeRangePanel = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/time-picker/src/time-picker-com/panel-time-range.vue\"]]);\n\nexport { TimeRangePanel as default };","map":{"version":3,"mappings":"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","names":["makeSelectRange","start","end","result","i","push","_sfc_main","defineComponent","components","TimeSpinner","props","visible","actualVisible","parsedValue","type","Array","format","default","emits","setup","ctx","t","lang","useLocale","useNamespace","minDate","maxDate","useOldValue","handleCancel","emit","oldValue","computed","includes","ref","value","date","handleChange","_date","_","dayjs","locale","getRangeAvailableTime","parsedDate","isSame","_minDate","_maxDate","selectionRange","offset","showSeconds","step","list","mapping","concat","index","indexOf","next","length","half","timePickerOptions","event","code","left","EVENT_CODE","right","changeSelectionRange","preventDefault","up","down","role","compare","defaultDisable","disabledHours","isStart","compareDate","hour","compareHour","nextDisable","disabledMinutes_","disabledMinutes","minute","compareMinute","disabledSeconds_","disabledSeconds","second","compareSecond","dates","getRangeAvailableTimeEach","getAvailableHours","getAvailableMinutes","getAvailableSeconds","getAvailableArrs","startDate","endDate","availableMap","forEach","method","availableArr","pos","isArray","map","getDefaultValue","defaultValue","defaultDay","add","formatToString","parseUserInput","isValidValue","handleKeydown","e","inject","arrowControl","pickerBase","nsTime","nsPicker","onSetOption","setMaxSelectionRange","setMinSelectionRange","btnConfirmDisabled","handleConfirm","amPmMode","handleMinChange","handleMaxChange","minSelectableRange","maxSelectableRange","disabledHours_","_createElementBlock","key","class","_normalizeClass","b","_ctx","_createElementVNode","be","_toDisplayString","is","_createVNode","onChange","onSelectRange","onClick","_cache","disabled","_hoisted_1"],"sources":["../../../../../../../packages/components/time-picker/src/time-picker-com/panel-time-range.vue"],"sourcesContent":["<template>\n  <div\n    v-if=\"actualVisible\"\n    :class=\"[nsTime.b('range-picker'), nsPicker.b('panel')]\"\n  >\n    <div :class=\"nsTime.be('range-picker', 'content')\">\n      <div :class=\"nsTime.be('range-picker', 'cell')\">\n        <div :class=\"nsTime.be('range-picker', 'header')\">\n          {{ t('el.datepicker.startTime') }}\n        </div>\n        <div\n          :class=\"[\n            nsTime.be('range-picker', 'body'),\n            nsTime.be('panel', 'content'),\n            nsTime.is('arrow', arrowControl),\n            { 'has-seconds': showSeconds },\n          ]\"\n        >\n          <time-spinner\n            ref=\"minSpinner\"\n            role=\"start\"\n            :show-seconds=\"showSeconds\"\n            :am-pm-mode=\"amPmMode\"\n            :arrow-control=\"arrowControl\"\n            :spinner-date=\"minDate\"\n            :disabled-hours=\"disabledHours_\"\n            :disabled-minutes=\"disabledMinutes_\"\n            :disabled-seconds=\"disabledSeconds_\"\n            @change=\"handleMinChange\"\n            @set-option=\"onSetOption\"\n            @select-range=\"setMinSelectionRange\"\n          />\n        </div>\n      </div>\n      <div :class=\"nsTime.be('range-picker', 'cell')\">\n        <div :class=\"nsTime.be('range-picker', 'header')\">\n          {{ t('el.datepicker.endTime') }}\n        </div>\n        <div\n          :class=\"[\n            nsTime.be('range-picker', 'body'),\n            nsTime.be('panel', 'content'),\n            nsTime.is('arrow', arrowControl),\n            { 'has-seconds': showSeconds },\n          ]\"\n        >\n          <time-spinner\n            ref=\"maxSpinner\"\n            role=\"end\"\n            :show-seconds=\"showSeconds\"\n            :am-pm-mode=\"amPmMode\"\n            :arrow-control=\"arrowControl\"\n            :spinner-date=\"maxDate\"\n            :disabled-hours=\"disabledHours_\"\n            :disabled-minutes=\"disabledMinutes_\"\n            :disabled-seconds=\"disabledSeconds_\"\n            @change=\"handleMaxChange\"\n            @set-option=\"onSetOption\"\n            @select-range=\"setMaxSelectionRange\"\n          />\n        </div>\n      </div>\n    </div>\n    <div :class=\"nsTime.be('panel', 'footer')\">\n      <button\n        type=\"button\"\n        :class=\"[nsTime.be('panel', 'btn'), 'cancel']\"\n        @click=\"handleCancel()\"\n      >\n        {{ t('el.datepicker.cancel') }}\n      </button>\n      <button\n        type=\"button\"\n        :class=\"[nsTime.be('panel', 'btn'), 'confirm']\"\n        :disabled=\"btnConfirmDisabled\"\n        @click=\"handleConfirm()\"\n      >\n        {{ t('el.datepicker.confirm') }}\n      </button>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, inject, ref } from 'vue'\nimport dayjs from 'dayjs'\nimport { union } from 'lodash-unified'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport TimeSpinner from './basic-time-spinner.vue'\nimport { getAvailableArrs, useOldValue } from './useTimePicker'\n\nimport type { PropType } from 'vue'\nimport type { Dayjs } from 'dayjs'\n\nconst makeSelectRange = (start: number, end: number) => {\n  const result = []\n  for (let i = start; i <= end; i++) {\n    result.push(i)\n  }\n  return result\n}\nexport default defineComponent({\n  components: { TimeSpinner },\n\n  props: {\n    visible: Boolean,\n    actualVisible: Boolean,\n    parsedValue: {\n      type: [Array] as PropType<Array<Dayjs>>,\n    },\n    format: {\n      type: String,\n      default: '',\n    },\n  },\n\n  emits: ['pick', 'select-range', 'set-picker-option'],\n\n  setup(props, ctx) {\n    const { t, lang } = useLocale()\n    const nsTime = useNamespace('time')\n    const nsPicker = useNamespace('picker')\n    const minDate = computed(() => props.parsedValue[0])\n    const maxDate = computed(() => props.parsedValue[1])\n    const oldValue = useOldValue(props)\n    const handleCancel = () => {\n      ctx.emit('pick', oldValue.value, false)\n    }\n    const showSeconds = computed(() => {\n      return props.format.includes('ss')\n    })\n    const amPmMode = computed(() => {\n      if (props.format.includes('A')) return 'A'\n      if (props.format.includes('a')) return 'a'\n      return ''\n    })\n\n    const minSelectableRange = ref([])\n    const maxSelectableRange = ref([])\n\n    const handleConfirm = (visible = false) => {\n      ctx.emit('pick', [minDate.value, maxDate.value], visible)\n    }\n\n    const handleMinChange = (date) => {\n      handleChange(date.millisecond(0), maxDate.value)\n    }\n    const handleMaxChange = (date) => {\n      handleChange(minDate.value, date.millisecond(0))\n    }\n\n    const isValidValue = (_date: Dayjs[]) => {\n      const parsedDate = _date.map((_) => dayjs(_).locale(lang.value))\n      const result = getRangeAvailableTime(parsedDate)\n      return parsedDate[0].isSame(result[0]) && parsedDate[1].isSame(result[1])\n    }\n\n    const handleChange = (_minDate, _maxDate) => {\n      // todo getRangeAvailableTime(_date).millisecond(0)\n      ctx.emit('pick', [_minDate, _maxDate], true)\n    }\n    const btnConfirmDisabled = computed(() => {\n      return minDate.value > maxDate.value\n    })\n\n    const selectionRange = ref([0, 2])\n    const setMinSelectionRange = (start, end) => {\n      ctx.emit('select-range', start, end, 'min')\n      selectionRange.value = [start, end]\n    }\n\n    const offset = computed(() => (showSeconds.value ? 11 : 8))\n    const setMaxSelectionRange = (start, end) => {\n      ctx.emit('select-range', start, end, 'max')\n      selectionRange.value = [start + offset.value, end + offset.value]\n    }\n\n    const changeSelectionRange = (step) => {\n      const list = showSeconds.value ? [0, 3, 6, 11, 14, 17] : [0, 3, 8, 11]\n      const mapping = ['hours', 'minutes'].concat(\n        showSeconds.value ? ['seconds'] : []\n      )\n      const index = list.indexOf(selectionRange.value[0])\n      const next = (index + step + list.length) % list.length\n      const half = list.length / 2\n      if (next < half) {\n        timePickerOptions['start_emitSelectRange'](mapping[next])\n      } else {\n        timePickerOptions['end_emitSelectRange'](mapping[next - half])\n      }\n    }\n\n    const handleKeydown = (event: KeyboardEvent) => {\n      const code = event.code\n\n      if (code === EVENT_CODE.left || code === EVENT_CODE.right) {\n        const step = code === EVENT_CODE.left ? -1 : 1\n        changeSelectionRange(step)\n        event.preventDefault()\n        return\n      }\n\n      if (code === EVENT_CODE.up || code === EVENT_CODE.down) {\n        const step = code === EVENT_CODE.up ? -1 : 1\n        const role = selectionRange.value[0] < offset.value ? 'start' : 'end'\n        timePickerOptions[`${role}_scrollDown`](step)\n        event.preventDefault()\n        return\n      }\n    }\n\n    const disabledHours_ = (role, compare) => {\n      const defaultDisable = disabledHours ? disabledHours(role) : []\n      const isStart = role === 'start'\n      const compareDate = compare || (isStart ? maxDate.value : minDate.value)\n      const compareHour = compareDate.hour()\n      const nextDisable = isStart\n        ? makeSelectRange(compareHour + 1, 23)\n        : makeSelectRange(0, compareHour - 1)\n      return union(defaultDisable, nextDisable)\n    }\n    const disabledMinutes_ = (hour, role, compare) => {\n      const defaultDisable = disabledMinutes ? disabledMinutes(hour, role) : []\n      const isStart = role === 'start'\n      const compareDate = compare || (isStart ? maxDate.value : minDate.value)\n      const compareHour = compareDate.hour()\n      if (hour !== compareHour) {\n        return defaultDisable\n      }\n      const compareMinute = compareDate.minute()\n      const nextDisable = isStart\n        ? makeSelectRange(compareMinute + 1, 59)\n        : makeSelectRange(0, compareMinute - 1)\n      return union(defaultDisable, nextDisable)\n    }\n    const disabledSeconds_ = (hour, minute, role, compare) => {\n      const defaultDisable = disabledSeconds\n        ? disabledSeconds(hour, minute, role)\n        : []\n      const isStart = role === 'start'\n      const compareDate = compare || (isStart ? maxDate.value : minDate.value)\n      const compareHour = compareDate.hour()\n      const compareMinute = compareDate.minute()\n      if (hour !== compareHour || minute !== compareMinute) {\n        return defaultDisable\n      }\n      const compareSecond = compareDate.second()\n      const nextDisable = isStart\n        ? makeSelectRange(compareSecond + 1, 59)\n        : makeSelectRange(0, compareSecond - 1)\n      return union(defaultDisable, nextDisable)\n    }\n\n    const getRangeAvailableTime = (dates: Array<Dayjs>) => {\n      return dates.map((_, index) =>\n        getRangeAvailableTimeEach(\n          dates[0],\n          dates[1],\n          index === 0 ? 'start' : 'end'\n        )\n      )\n    }\n\n    const { getAvailableHours, getAvailableMinutes, getAvailableSeconds } =\n      getAvailableArrs(disabledHours_, disabledMinutes_, disabledSeconds_)\n\n    const getRangeAvailableTimeEach = (\n      startDate: Dayjs,\n      endDate: Dayjs,\n      role\n    ) => {\n      const availableMap = {\n        hour: getAvailableHours,\n        minute: getAvailableMinutes,\n        second: getAvailableSeconds,\n      }\n      const isStart = role === 'start'\n      let result = isStart ? startDate : endDate\n      const compareDate = isStart ? endDate : startDate\n      ;['hour', 'minute', 'second'].forEach((_) => {\n        if (availableMap[_]) {\n          let availableArr\n          const method = availableMap[_]\n          if (_ === 'minute') {\n            availableArr = method(result.hour(), role, compareDate)\n          } else if (_ === 'second') {\n            availableArr = method(\n              result.hour(),\n              result.minute(),\n              role,\n              compareDate\n            )\n          } else {\n            availableArr = method(role, compareDate)\n          }\n          if (\n            availableArr &&\n            availableArr.length &&\n            !availableArr.includes(result[_]())\n          ) {\n            const pos = isStart ? 0 : availableArr.length - 1\n            result = result[_](availableArr[pos])\n          }\n        }\n      })\n      return result\n    }\n\n    const parseUserInput = (value: Dayjs[] | Dayjs) => {\n      if (!value) return null\n      if (Array.isArray(value)) {\n        return value.map((_) => dayjs(_, props.format).locale(lang.value))\n      }\n      return dayjs(value, props.format).locale(lang.value)\n    }\n\n    const formatToString = (value: Dayjs[] | Dayjs) => {\n      if (!value) return null\n      if (Array.isArray(value)) {\n        return value.map((_) => _.format(props.format))\n      }\n      return value.format(props.format)\n    }\n\n    const getDefaultValue = () => {\n      if (Array.isArray(defaultValue)) {\n        return defaultValue.map((_) => dayjs(_).locale(lang.value))\n      }\n      const defaultDay = dayjs(defaultValue).locale(lang.value)\n      return [defaultDay, defaultDay.add(60, 'm')]\n    }\n\n    ctx.emit('set-picker-option', ['formatToString', formatToString])\n    ctx.emit('set-picker-option', ['parseUserInput', parseUserInput])\n    ctx.emit('set-picker-option', ['isValidValue', isValidValue])\n    ctx.emit('set-picker-option', ['handleKeydownInput', handleKeydown])\n    ctx.emit('set-picker-option', ['getDefaultValue', getDefaultValue])\n    ctx.emit('set-picker-option', [\n      'getRangeAvailableTime',\n      getRangeAvailableTime,\n    ])\n\n    const timePickerOptions = {} as any\n    const onSetOption = (e) => {\n      timePickerOptions[e[0]] = e[1]\n    }\n\n    const pickerBase = inject('EP_PICKER_BASE') as any\n    const {\n      arrowControl,\n      disabledHours,\n      disabledMinutes,\n      disabledSeconds,\n      defaultValue,\n    } = pickerBase.props\n\n    return {\n      nsTime,\n      nsPicker,\n      arrowControl,\n      onSetOption,\n      setMaxSelectionRange,\n      setMinSelectionRange,\n      btnConfirmDisabled,\n      handleCancel,\n      handleConfirm,\n      t,\n      showSeconds,\n      minDate,\n      maxDate,\n      amPmMode,\n      handleMinChange,\n      handleMaxChange,\n      minSelectableRange,\n      maxSelectableRange,\n      disabledHours_,\n      disabledMinutes_,\n      disabledSeconds_,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}