{"ast":null,"code":"import '../../../utils/index2.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props2.mjs';\nimport { iconPropType } from '../../../utils/vue/icon2.mjs';\nconst messageTypes = [\"success\", \"info\", \"warning\", \"error\"];\nconst messageProps = buildProps({\n  customClass: {\n    type: String,\n    default: \"\"\n  },\n  center: {\n    type: Boolean,\n    default: false\n  },\n  dangerouslyUseHTMLString: {\n    type: Boolean,\n    default: false\n  },\n  duration: {\n    type: Number,\n    default: 3e3\n  },\n  icon: {\n    type: iconPropType,\n    default: \"\"\n  },\n  id: {\n    type: String,\n    default: \"\"\n  },\n  message: {\n    type: definePropType([String, Object, Function]),\n    default: \"\"\n  },\n  onClose: {\n    type: definePropType(Function),\n    required: false\n  },\n  showClose: {\n    type: Boolean,\n    default: false\n  },\n  type: {\n    type: String,\n    values: messageTypes,\n    default: \"info\"\n  },\n  offset: {\n    type: Number,\n    default: 20\n  },\n  zIndex: {\n    type: Number,\n    default: 0\n  },\n  grouping: {\n    type: Boolean,\n    default: false\n  },\n  repeatNum: {\n    type: Number,\n    default: 1\n  }\n});\nconst messageEmits = {\n  destroy: () => true\n};\nexport { messageEmits, messageProps, messageTypes };","map":{"version":3,"mappings":";;;AACY,MAACA,YAAY,GAAG,CAAC,SAAD,EAAY,MAAZ,EAAoB,SAApB,EAA+B,OAA/B,CAAhB;AACA,MAACC,YAAY,GAAGC,UAAU,CAAC;EACrCC,WAAW,EAAE;IACXC,IAAI,EAAEC,MADK;IAEXC,OAAO,EAAE;EAFE,CADwB;EAKrCC,MAAM,EAAE;IACNH,IAAI,EAAEI,OADA;IAENF,OAAO,EAAE;EAFH,CAL6B;EASrCG,wBAAwB,EAAE;IACxBL,IAAI,EAAEI,OADkB;IAExBF,OAAO,EAAE;EAFe,CATW;EAarCI,QAAQ,EAAE;IACRN,IAAI,EAAEO,MADE;IAERL,OAAO,EAAE;EAFD,CAb2B;EAiBrCM,IAAI,EAAE;IACJR,IAAI,EAAES,YADF;IAEJP,OAAO,EAAE;EAFL,CAjB+B;EAqBrCQ,EAAE,EAAE;IACFV,IAAI,EAAEC,MADJ;IAEFC,OAAO,EAAE;EAFP,CArBiC;EAyBrCS,OAAO,EAAE;IACPX,IAAI,EAAEY,cAAc,CAAC,CACnBX,MADmB,EAEnBY,MAFmB,EAGnBC,QAHmB,CAAD,CADb;IAMPZ,OAAO,EAAE;EANF,CAzB4B;EAiCrCa,OAAO,EAAE;IACPf,IAAI,EAAEY,cAAc,CAACE,QAAD,CADb;IAEPE,QAAQ,EAAE;EAFH,CAjC4B;EAqCrCC,SAAS,EAAE;IACTjB,IAAI,EAAEI,OADG;IAETF,OAAO,EAAE;EAFA,CArC0B;EAyCrCF,IAAI,EAAE;IACJA,IAAI,EAAEC,MADF;IAEJiB,MAAM,EAAEtB,YAFJ;IAGJM,OAAO,EAAE;EAHL,CAzC+B;EA8CrCiB,MAAM,EAAE;IACNnB,IAAI,EAAEO,MADA;IAENL,OAAO,EAAE;EAFH,CA9C6B;EAkDrCkB,MAAM,EAAE;IACNpB,IAAI,EAAEO,MADA;IAENL,OAAO,EAAE;EAFH,CAlD6B;EAsDrCmB,QAAQ,EAAE;IACRrB,IAAI,EAAEI,OADE;IAERF,OAAO,EAAE;EAFD,CAtD2B;EA0DrCoB,SAAS,EAAE;IACTtB,IAAI,EAAEO,MADG;IAETL,OAAO,EAAE;EAFA;AA1D0B,CAAD,CAA1B;AA+DA,MAACqB,YAAY,GAAG;EAC1BC,OAAO,EAAE,MAAM;AADW,CAAhB","names":["messageTypes","messageProps","buildProps","customClass","type","String","default","center","Boolean","dangerouslyUseHTMLString","duration","Number","icon","iconPropType","id","message","definePropType","Object","Function","onClose","required","showClose","values","offset","zIndex","grouping","repeatNum","messageEmits","destroy"],"sources":["../../../../../../packages/components/message/src/message.ts"],"sourcesContent":["import { buildProps, definePropType, iconPropType } from '@element-plus/utils'\nimport type { AppContext, ExtractPropTypes, VNode } from 'vue'\n\nexport const messageTypes = ['success', 'info', 'warning', 'error'] as const\n\nexport interface MessageConfigContext {\n  max?: number\n}\n\nexport const messageProps = buildProps({\n  customClass: {\n    type: String,\n    default: '',\n  },\n  center: {\n    type: Boolean,\n    default: false,\n  },\n  dangerouslyUseHTMLString: {\n    type: Boolean,\n    default: false,\n  },\n  duration: {\n    type: Number,\n    default: 3000,\n  },\n  icon: {\n    type: iconPropType,\n    default: '',\n  },\n  id: {\n    type: String,\n    default: '',\n  },\n  message: {\n    type: definePropType<string | VNode | (() => VNode)>([\n      String,\n      Object,\n      Function,\n    ]),\n    default: '',\n  },\n  onClose: {\n    type: definePropType<() => void>(Function),\n    required: false,\n  },\n  showClose: {\n    type: Boolean,\n    default: false,\n  },\n  type: {\n    type: String,\n    values: messageTypes,\n    default: 'info',\n  },\n  offset: {\n    type: Number,\n    default: 20,\n  },\n  zIndex: {\n    type: Number,\n    default: 0,\n  },\n  grouping: {\n    type: Boolean,\n    default: false,\n  },\n  repeatNum: {\n    type: Number,\n    default: 1,\n  },\n} as const)\nexport type MessageProps = ExtractPropTypes<typeof messageProps>\n\nexport const messageEmits = {\n  destroy: () => true,\n}\nexport type MessageEmits = typeof messageEmits\n\nexport type MessageOptions = Omit<MessageProps, 'id'> & {\n  appendTo?: HTMLElement | string\n}\nexport type MessageOptionsTyped = Omit<MessageOptions, 'type'>\n\nexport interface MessageHandle {\n  close: () => void\n}\n\nexport type MessageParams = Partial<MessageOptions> | string | VNode\nexport type MessageParamsTyped = Partial<MessageOptionsTyped> | string | VNode\n\nexport type MessageFn = ((\n  options?: MessageParams,\n  appContext?: null | AppContext\n) => MessageHandle) & {\n  closeAll(): void\n}\nexport type MessageTypedFn = (\n  options?: MessageParamsTyped,\n  appContext?: null | AppContext\n) => MessageHandle\n\nexport interface Message extends MessageFn {\n  success: MessageTypedFn\n  warning: MessageTypedFn\n  info: MessageTypedFn\n  error: MessageTypedFn\n}\n\ntype MessageQueueItem = {\n  vm: VNode\n}\n\nexport type MessageQueue = MessageQueueItem[]\n"]},"metadata":{},"sourceType":"module"}