{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport { defineComponent, computed, ref, watch, nextTick, onMounted, resolveComponent, openBlock, createElementBlock, normalizeClass, withModifiers, createElementVNode, withKeys, createBlock, withCtx, resolveDynamicComponent, createCommentVNode, toDisplayString, normalizeStyle, Fragment, createVNode } from 'vue';\nimport { isPromise } from '@vue/shared';\nimport '../../../utils/index2.mjs';\nimport { ElIcon } from '../../icon/index2.mjs';\nimport { Loading } from '@element-plus/icons-vue';\nimport '../../../constants/index2.mjs';\nimport '../../../hooks/index2.mjs';\nimport { switchProps, switchEmits } from './switch3.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useFormItem, useFormItemInputId } from '../../../hooks/use-form-item/index2.mjs';\nimport { useDisabled, useSize } from '../../../hooks/use-common-props/index2.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index2.mjs';\nimport { addUnit } from '../../../utils/dom/style2.mjs';\nimport { UPDATE_MODEL_EVENT, CHANGE_EVENT, INPUT_EVENT } from '../../../constants/event2.mjs';\nimport { debugWarn, throwError } from '../../../utils/error2.mjs';\nimport { isBoolean } from '@vueuse/core';\nconst COMPONENT_NAME = \"ElSwitch\";\n\nconst _sfc_main = defineComponent({\n  name: COMPONENT_NAME,\n  components: {\n    ElIcon,\n    Loading\n  },\n  props: switchProps,\n  emits: switchEmits,\n\n  setup(props, {\n    emit\n  }) {\n    const {\n      formItem\n    } = useFormItem();\n    const switchDisabled = useDisabled(computed(() => props.loading));\n    const ns = useNamespace(\"switch\");\n    const {\n      inputId\n    } = useFormItemInputId(props, {\n      formItemContext: formItem\n    });\n    const switchSize = useSize();\n    const isModelValue = ref(props.modelValue !== false);\n    const input = ref();\n    const core = ref();\n    const switchKls = computed(() => [ns.b(), ns.m(switchSize.value), ns.is(\"disabled\", switchDisabled.value), ns.is(\"checked\", checked.value)]);\n    const coreStyle = computed(() => ({\n      width: addUnit(props.width)\n    }));\n    watch(() => props.modelValue, () => {\n      isModelValue.value = true;\n    });\n    watch(() => props.value, () => {\n      isModelValue.value = false;\n    });\n    const actualValue = computed(() => {\n      return isModelValue.value ? props.modelValue : props.value;\n    });\n    const checked = computed(() => actualValue.value === props.activeValue);\n\n    if (![props.activeValue, props.inactiveValue].includes(actualValue.value)) {\n      emit(UPDATE_MODEL_EVENT, props.inactiveValue);\n      emit(CHANGE_EVENT, props.inactiveValue);\n      emit(INPUT_EVENT, props.inactiveValue);\n    }\n\n    watch(checked, () => {\n      var _a;\n\n      input.value.checked = checked.value;\n\n      if (props.activeColor || props.inactiveColor) {\n        setBackgroundColor();\n      }\n\n      if (props.validateEvent) {\n        (_a = formItem == null ? void 0 : formItem.validate) == null ? void 0 : _a.call(formItem, \"change\").catch(err => debugWarn(err));\n      }\n    });\n\n    const handleChange = () => {\n      const val = checked.value ? props.inactiveValue : props.activeValue;\n      emit(UPDATE_MODEL_EVENT, val);\n      emit(CHANGE_EVENT, val);\n      emit(INPUT_EVENT, val);\n      nextTick(() => {\n        input.value.checked = checked.value;\n      });\n    };\n\n    const switchValue = () => {\n      if (switchDisabled.value) return;\n      const {\n        beforeChange\n      } = props;\n\n      if (!beforeChange) {\n        handleChange();\n        return;\n      }\n\n      const shouldChange = beforeChange();\n      const isExpectType = [isPromise(shouldChange), isBoolean(shouldChange)].some(i => i);\n\n      if (!isExpectType) {\n        throwError(COMPONENT_NAME, \"beforeChange must return type `Promise<boolean>` or `boolean`\");\n      }\n\n      if (isPromise(shouldChange)) {\n        shouldChange.then(result => {\n          if (result) {\n            handleChange();\n          }\n        }).catch(e => {\n          debugWarn(COMPONENT_NAME, `some error occurred: ${e}`);\n        });\n      } else if (shouldChange) {\n        handleChange();\n      }\n    };\n\n    const setBackgroundColor = () => {\n      const newColor = checked.value ? props.activeColor : props.inactiveColor;\n      const coreEl = core.value;\n      if (props.borderColor) coreEl.style.borderColor = props.borderColor;else if (!props.borderColor) coreEl.style.borderColor = newColor;\n      coreEl.style.backgroundColor = newColor;\n      coreEl.children[0].style.color = newColor;\n    };\n\n    const focus = () => {\n      var _a, _b;\n\n      (_b = (_a = input.value) == null ? void 0 : _a.focus) == null ? void 0 : _b.call(_a);\n    };\n\n    onMounted(() => {\n      if (props.activeColor || props.inactiveColor || props.borderColor) {\n        setBackgroundColor();\n      }\n\n      input.value.checked = checked.value;\n    });\n    return {\n      ns,\n      input,\n      inputId,\n      core,\n      switchDisabled,\n      checked,\n      switchKls,\n      coreStyle,\n      handleChange,\n      switchValue,\n      focus\n    };\n  }\n\n});\n\nconst _hoisted_1 = [\"id\", \"aria-checked\", \"aria-disabled\", \"name\", \"true-value\", \"false-value\", \"disabled\"];\nconst _hoisted_2 = [\"aria-hidden\"];\nconst _hoisted_3 = [\"aria-hidden\"];\nconst _hoisted_4 = [\"aria-hidden\"];\nconst _hoisted_5 = [\"aria-hidden\"];\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_icon = resolveComponent(\"el-icon\");\n\n  const _component_loading = resolveComponent(\"loading\");\n\n  return openBlock(), createElementBlock(\"div\", {\n    class: normalizeClass(_ctx.switchKls),\n    onClick: _cache[2] || (_cache[2] = withModifiers((...args) => _ctx.switchValue && _ctx.switchValue(...args), [\"prevent\"]))\n  }, [createElementVNode(\"input\", {\n    id: _ctx.inputId,\n    ref: \"input\",\n    class: normalizeClass(_ctx.ns.e(\"input\")),\n    type: \"checkbox\",\n    role: \"switch\",\n    \"aria-checked\": _ctx.checked,\n    \"aria-disabled\": _ctx.switchDisabled,\n    name: _ctx.name,\n    \"true-value\": _ctx.activeValue,\n    \"false-value\": _ctx.inactiveValue,\n    disabled: _ctx.switchDisabled,\n    onChange: _cache[0] || (_cache[0] = (...args) => _ctx.handleChange && _ctx.handleChange(...args)),\n    onKeydown: _cache[1] || (_cache[1] = withKeys((...args) => _ctx.switchValue && _ctx.switchValue(...args), [\"enter\"]))\n  }, null, 42, _hoisted_1), !_ctx.inlinePrompt && (_ctx.inactiveIcon || _ctx.inactiveText) ? (openBlock(), createElementBlock(\"span\", {\n    key: 0,\n    class: normalizeClass([_ctx.ns.e(\"label\"), _ctx.ns.em(\"label\", \"left\"), _ctx.ns.is(\"active\", !_ctx.checked)])\n  }, [_ctx.inactiveIcon ? (openBlock(), createBlock(_component_el_icon, {\n    key: 0\n  }, {\n    default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.inactiveIcon)))]),\n    _: 1\n  })) : createCommentVNode(\"v-if\", true), !_ctx.inactiveIcon && _ctx.inactiveText ? (openBlock(), createElementBlock(\"span\", {\n    key: 1,\n    \"aria-hidden\": _ctx.checked\n  }, toDisplayString(_ctx.inactiveText), 9, _hoisted_2)) : createCommentVNode(\"v-if\", true)], 2)) : createCommentVNode(\"v-if\", true), createElementVNode(\"span\", {\n    ref: \"core\",\n    class: normalizeClass(_ctx.ns.e(\"core\")),\n    style: normalizeStyle(_ctx.coreStyle)\n  }, [_ctx.inlinePrompt ? (openBlock(), createElementBlock(\"div\", {\n    key: 0,\n    class: normalizeClass(_ctx.ns.e(\"inner\"))\n  }, [_ctx.activeIcon || _ctx.inactiveIcon ? (openBlock(), createElementBlock(Fragment, {\n    key: 0\n  }, [_ctx.activeIcon ? (openBlock(), createBlock(_component_el_icon, {\n    key: 0,\n    class: normalizeClass([_ctx.ns.is(\"icon\"), _ctx.checked ? _ctx.ns.is(\"show\") : _ctx.ns.is(\"hide\")])\n  }, {\n    default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.activeIcon)))]),\n    _: 1\n  }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true), _ctx.inactiveIcon ? (openBlock(), createBlock(_component_el_icon, {\n    key: 1,\n    class: normalizeClass([_ctx.ns.is(\"icon\"), !_ctx.checked ? _ctx.ns.is(\"show\") : _ctx.ns.is(\"hide\")])\n  }, {\n    default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.inactiveIcon)))]),\n    _: 1\n  }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true)], 64)) : _ctx.activeText || _ctx.inactiveIcon ? (openBlock(), createElementBlock(Fragment, {\n    key: 1\n  }, [_ctx.activeText ? (openBlock(), createElementBlock(\"span\", {\n    key: 0,\n    class: normalizeClass([_ctx.ns.is(\"text\"), _ctx.checked ? _ctx.ns.is(\"show\") : _ctx.ns.is(\"hide\")]),\n    \"aria-hidden\": !_ctx.checked\n  }, toDisplayString(_ctx.activeText.substring(0, 3)), 11, _hoisted_3)) : createCommentVNode(\"v-if\", true), _ctx.inactiveText ? (openBlock(), createElementBlock(\"span\", {\n    key: 1,\n    class: normalizeClass([_ctx.ns.is(\"text\"), !_ctx.checked ? _ctx.ns.is(\"show\") : _ctx.ns.is(\"hide\")]),\n    \"aria-hidden\": _ctx.checked\n  }, toDisplayString(_ctx.inactiveText.substring(0, 3)), 11, _hoisted_4)) : createCommentVNode(\"v-if\", true)], 64)) : createCommentVNode(\"v-if\", true)], 2)) : createCommentVNode(\"v-if\", true), createElementVNode(\"div\", {\n    class: normalizeClass(_ctx.ns.e(\"action\"))\n  }, [_ctx.loading ? (openBlock(), createBlock(_component_el_icon, {\n    key: 0,\n    class: normalizeClass(_ctx.ns.is(\"loading\"))\n  }, {\n    default: withCtx(() => [createVNode(_component_loading)]),\n    _: 1\n  }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true)], 2)], 6), !_ctx.inlinePrompt && (_ctx.activeIcon || _ctx.activeText) ? (openBlock(), createElementBlock(\"span\", {\n    key: 1,\n    class: normalizeClass([_ctx.ns.e(\"label\"), _ctx.ns.em(\"label\", \"right\"), _ctx.ns.is(\"active\", _ctx.checked)])\n  }, [_ctx.activeIcon ? (openBlock(), createBlock(_component_el_icon, {\n    key: 0\n  }, {\n    default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.activeIcon)))]),\n    _: 1\n  })) : createCommentVNode(\"v-if\", true), !_ctx.activeIcon && _ctx.activeText ? (openBlock(), createElementBlock(\"span\", {\n    key: 1,\n    \"aria-hidden\": !_ctx.checked\n  }, toDisplayString(_ctx.activeText), 9, _hoisted_5)) : createCommentVNode(\"v-if\", true)], 2)) : createCommentVNode(\"v-if\", true)], 2);\n}\n\nvar Switch = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/switch/src/switch.vue\"]]);\n\nexport { Switch as default };","map":{"version":3,"mappings":"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","names":["COMPONENT_NAME","_sfc_main","defineComponent","name","components","ElIcon","Loading","props","emits","setup","emit","formItem","useFormItem","switchDisabled","useDisabled","loading","useNamespace","inputId","useFormItemInputId","formItemContext","switchSize","useSize","isModelValue","input","ref","core","computed","ns","b","m","value","checked","width","addUnit","watch","actualValue","activeValue","inactiveValue","includes","setBackgroundColor","UPDATE_MODEL_EVENT","val","CHANGE_EVENT","nextTick","switchValue","beforeChange","handleChange","shouldChange","isPromise","isBoolean","some","i","throwError","result","catch","e","debugWarn","newColor","coreEl","style","borderColor","backgroundColor","_a","_b","onMounted","switchKls","coreStyle","focus","_resolveComponent","class","_openBlock","onClick","_createElementVNode","id","type","role","_ctx","disabled","onChange","onKeydown","_withKeys","_hoisted_1","key","default","_","_createCommentVNode","_toDisplayString","_hoisted_2","_createElementBlock","_component_el_icon","_createBlock","createCommentVNode","_normalizeClass","_hoisted_3"],"sources":["../../../../../../packages/components/switch/src/switch.vue"],"sourcesContent":["<template>\n  <div :class=\"switchKls\" @click.prevent=\"switchValue\">\n    <input\n      :id=\"inputId\"\n      ref=\"input\"\n      :class=\"ns.e('input')\"\n      type=\"checkbox\"\n      role=\"switch\"\n      :aria-checked=\"checked\"\n      :aria-disabled=\"switchDisabled\"\n      :name=\"name\"\n      :true-value=\"activeValue\"\n      :false-value=\"inactiveValue\"\n      :disabled=\"switchDisabled\"\n      @change=\"handleChange\"\n      @keydown.enter=\"switchValue\"\n    />\n    <span\n      v-if=\"!inlinePrompt && (inactiveIcon || inactiveText)\"\n      :class=\"[\n        ns.e('label'),\n        ns.em('label', 'left'),\n        ns.is('active', !checked),\n      ]\"\n    >\n      <el-icon v-if=\"inactiveIcon\"><component :is=\"inactiveIcon\" /></el-icon>\n      <span v-if=\"!inactiveIcon && inactiveText\" :aria-hidden=\"checked\">{{\n        inactiveText\n      }}</span>\n    </span>\n    <span ref=\"core\" :class=\"ns.e('core')\" :style=\"coreStyle\">\n      <div v-if=\"inlinePrompt\" :class=\"ns.e('inner')\">\n        <template v-if=\"activeIcon || inactiveIcon\">\n          <el-icon\n            v-if=\"activeIcon\"\n            :class=\"[ns.is('icon'), checked ? ns.is('show') : ns.is('hide')]\"\n          >\n            <component :is=\"activeIcon\" />\n          </el-icon>\n          <el-icon\n            v-if=\"inactiveIcon\"\n            :class=\"[ns.is('icon'), !checked ? ns.is('show') : ns.is('hide')]\"\n          >\n            <component :is=\"inactiveIcon\" />\n          </el-icon>\n        </template>\n        <template v-else-if=\"activeText || inactiveIcon\">\n          <span\n            v-if=\"activeText\"\n            :class=\"[ns.is('text'), checked ? ns.is('show') : ns.is('hide')]\"\n            :aria-hidden=\"!checked\"\n          >\n            {{ activeText.substring(0, 3) }}\n          </span>\n          <span\n            v-if=\"inactiveText\"\n            :class=\"[ns.is('text'), !checked ? ns.is('show') : ns.is('hide')]\"\n            :aria-hidden=\"checked\"\n          >\n            {{ inactiveText.substring(0, 3) }}\n          </span>\n        </template>\n      </div>\n      <div :class=\"ns.e('action')\">\n        <el-icon v-if=\"loading\" :class=\"ns.is('loading')\"><loading /></el-icon>\n      </div>\n    </span>\n    <span\n      v-if=\"!inlinePrompt && (activeIcon || activeText)\"\n      :class=\"[\n        ns.e('label'),\n        ns.em('label', 'right'),\n        ns.is('active', checked),\n      ]\"\n    >\n      <el-icon v-if=\"activeIcon\"><component :is=\"activeIcon\" /></el-icon>\n      <span v-if=\"!activeIcon && activeText\" :aria-hidden=\"!checked\">{{\n        activeText\n      }}</span>\n    </span>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, nextTick, onMounted, ref, watch } from 'vue'\nimport { isPromise } from '@vue/shared'\nimport { addUnit, debugWarn, isBoolean, throwError } from '@element-plus/utils'\nimport ElIcon from '@element-plus/components/icon'\nimport { Loading } from '@element-plus/icons-vue'\nimport {\n  CHANGE_EVENT,\n  INPUT_EVENT,\n  UPDATE_MODEL_EVENT,\n} from '@element-plus/constants'\nimport {\n  useDisabled,\n  useFormItem,\n  useFormItemInputId,\n  useNamespace,\n  useSize,\n} from '@element-plus/hooks'\nimport { switchEmits, switchProps } from './switch'\n\nimport type { CSSProperties } from 'vue'\n\nconst COMPONENT_NAME = 'ElSwitch'\n\nexport default defineComponent({\n  name: COMPONENT_NAME,\n  components: { ElIcon, Loading },\n\n  props: switchProps,\n  emits: switchEmits,\n\n  setup(props, { emit }) {\n    const { formItem } = useFormItem()\n    const switchDisabled = useDisabled(computed(() => props.loading))\n    const ns = useNamespace('switch')\n\n    const { inputId } = useFormItemInputId(props, {\n      formItemContext: formItem,\n    })\n\n    const switchSize = useSize()\n    const isModelValue = ref(props.modelValue !== false)\n    const input = ref<HTMLInputElement>()\n    const core = ref<HTMLSpanElement>()\n\n    const switchKls = computed(() => [\n      ns.b(),\n      ns.m(switchSize.value),\n      ns.is('disabled', switchDisabled.value),\n      ns.is('checked', checked.value),\n    ])\n\n    const coreStyle = computed<CSSProperties>(() => ({\n      width: addUnit(props.width),\n    }))\n\n    watch(\n      () => props.modelValue,\n      () => {\n        isModelValue.value = true\n      }\n    )\n\n    watch(\n      () => props.value,\n      () => {\n        isModelValue.value = false\n      }\n    )\n\n    const actualValue = computed(() => {\n      return isModelValue.value ? props.modelValue : props.value\n    })\n\n    const checked = computed(() => actualValue.value === props.activeValue)\n\n    if (![props.activeValue, props.inactiveValue].includes(actualValue.value)) {\n      emit(UPDATE_MODEL_EVENT, props.inactiveValue)\n      emit(CHANGE_EVENT, props.inactiveValue)\n      emit(INPUT_EVENT, props.inactiveValue)\n    }\n\n    watch(checked, () => {\n      input.value!.checked = checked.value\n\n      if (props.activeColor || props.inactiveColor) {\n        setBackgroundColor()\n      }\n\n      if (props.validateEvent) {\n        formItem?.validate?.('change').catch((err) => debugWarn(err))\n      }\n    })\n\n    const handleChange = (): void => {\n      const val = checked.value ? props.inactiveValue : props.activeValue\n      emit(UPDATE_MODEL_EVENT, val)\n      emit(CHANGE_EVENT, val)\n      emit(INPUT_EVENT, val)\n      nextTick(() => {\n        input.value!.checked = checked.value\n      })\n    }\n\n    const switchValue = (): void => {\n      if (switchDisabled.value) return\n\n      const { beforeChange } = props\n      if (!beforeChange) {\n        handleChange()\n        return\n      }\n\n      const shouldChange = beforeChange()\n\n      const isExpectType = [\n        isPromise(shouldChange),\n        isBoolean(shouldChange),\n      ].some((i) => i)\n      if (!isExpectType) {\n        throwError(\n          COMPONENT_NAME,\n          'beforeChange must return type `Promise<boolean>` or `boolean`'\n        )\n      }\n\n      if (isPromise(shouldChange)) {\n        shouldChange\n          .then((result) => {\n            if (result) {\n              handleChange()\n            }\n          })\n          .catch((e) => {\n            debugWarn(COMPONENT_NAME, `some error occurred: ${e}`)\n          })\n      } else if (shouldChange) {\n        handleChange()\n      }\n    }\n\n    const setBackgroundColor = (): void => {\n      const newColor = checked.value ? props.activeColor : props.inactiveColor\n      const coreEl = core.value\n      if (props.borderColor) coreEl!.style.borderColor = props.borderColor\n      else if (!props.borderColor) coreEl!.style.borderColor = newColor\n      coreEl!.style.backgroundColor = newColor\n      ;(coreEl!.children[0] as HTMLDivElement).style.color = newColor\n    }\n\n    const focus = (): void => {\n      input.value?.focus?.()\n    }\n\n    onMounted(() => {\n      if (props.activeColor || props.inactiveColor || props.borderColor) {\n        setBackgroundColor()\n      }\n\n      input.value!.checked = checked.value\n    })\n\n    return {\n      ns,\n      input,\n      inputId,\n      core,\n      switchDisabled,\n      checked,\n      switchKls,\n      coreStyle,\n      handleChange,\n      switchValue,\n      focus,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}